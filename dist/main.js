(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),i=t(645),d=t.n(i),l=t(667),a=t.n(l),c=new URL(t(718),t.b),s=d()(o()),A=a()(c);s.push([e.id,`* {\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n    font-weight: 500;\n}\n\nbody {\n    margin: 0;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: auto 1fr;\n    min-height: 100vh;\n}\n\n/* HEADER */\n.header {\n    background: #1F9EFF;\n    font-size: 3rem;\n    grid-column: span 2;\n    grid-row: 1 / 2;\n    color: white;\n    padding: 1rem 5rem;\n}\n\n/* SIDEBAR */\n\n.sidebar {\n    background: #ADDCFF;\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    color: gray;\n    font-size: 1.5rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    min-width: 200px;\n}\n\n.sidebar span {\n    align-self: center;\n}\n\n.filters,\n.projects {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.sidebar-container {\n    background: white;\n    padding: 0.75rem;\n    border-radius: 8px;\n    border: 1px solid white;\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    overflow: hidden;\n}\n\n.sidebar-container:hover {\n    border: 1px solid gray;\n    cursor: pointer;\n}\n\n.selected {\n    background: #ffdeb3;\n    border: 1px solid #ffdeb3;\n}\n\n.projects-title,\n.todos-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n    gap: 0.5rem;\n}\n\n/* CONTENT */\n\n.content {\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    margin: 0 25%;\n    color: gray;\n    min-width: 300px;\n}\n\n.todo-info {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    overflow: hidden;\n    flex: 1;\n}\n\n.todo-info span,\n.sidebar-container span {\n    display: inline-block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.checkbox {\n    min-width: 1rem;\n    min-height: 1rem;\n    border-radius: 5px;\n    border: 2px solid gray;\n    background: white;\n}\n\n.complete {\n    background: url(${A}) no-repeat center;\n    background-size: fill;\n}\n\n.todos-title {\n    font-size: 2.5rem;\n    border-bottom: 2px solid #EBF6FF;\n}\n\n.content-container {\n    font-size: 1.1rem;\n    padding: 1rem;\n    border-bottom: 2px solid #EBF6FF;\n    display: flex;\n    justify-content: space-between;\n    gap: 0.5rem;\n    align-items: center;\n\n}\n\n.content-container:hover {\n    background: #EBF6FF;\n    cursor: pointer;\n}\n\n.date {\n    font-size: 0.75rem;\n    margin-left: auto;\n    white-space: nowrap;\n}\n\n/* BUTTONS */\n\nimg:hover {\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\n    cursor: pointer;\n}\n\n.action-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 0.5rem;\n}\n\n.add-button,\n.edit-button,\n.delete-button,\n.info-button {\n    height: 1.5rem;\n}\n\n/* MODAL */\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    /* Semi-transparent black background */\n}\n\n.modal-container {\n    background-color: white;\n    margin: 10% auto;\n    border: 1px solid gray;\n    width: max(320px, 30%);\n    display: flex;\n    flex-direction: column;\n}\n\n.modal-title {\n    grid-row: 1 / 2;\n    background: #1F9EFF;\n    font-size: 2rem;\n    color: white;\n    padding: 1rem 1.5rem;\n}\n\n.modal-content {\n    grid-row: 2 / 3;\n    padding: 1rem 1.5rem;\n    font-size: 1.3rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\n\n#new-project-modal,\n#edit-project-modal,\n#new-todo-modal, #edit-todo-modal, #todo-info-modal {\n    display: none;\n}\n\n\n\n#todo-info-modal .attribute-container {\n    border-bottom: 2px solid #EBF6FF;\n    padding-bottom: 1rem;\n    display: flex;\n    align-items: center;\n}\n\n.attribute-container .attribute {\n    width: 150px;\n}\n\n.attribute-container .value {\n    color: gray;\n    font-size: 1rem;\n    flex: 1;\n}\n\n.attribute-container .todo-description {\n    height: 100px;\n    overflow-y: scroll;\n}\n\n/* FORM STYLES */\n\ninput,\nselect {\n    border: 2px solid gray;\n    outline: none;\n    border-radius: 5px;\n    height: 2rem;\n    font-size: 1rem;\n    padding-left: 0.5rem;\n}\n\n.modal-content .action-buttons {\n    justify-content: flex-end;\n    gap: 1rem;\n}\n\n.required {\n    color: red;\n}\n\n.error-text {\n    display: none;\n    color: red;\n    font-size: 0.8rem;\n}\n\nbutton {\n    background: #1F9EFF;\n    color: white;\n    padding: 0.75rem;\n    border: none;\n    border-radius: 5px;\n    font-size: 1.3rem;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background: #1b87da;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['* {\r\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\r\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n    font-weight: 500;\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    grid-template-rows: auto 1fr;\r\n    min-height: 100vh;\r\n}\r\n\r\n/* HEADER */\r\n.header {\r\n    background: #1F9EFF;\r\n    font-size: 3rem;\r\n    grid-column: span 2;\r\n    grid-row: 1 / 2;\r\n    color: white;\r\n    padding: 1rem 5rem;\r\n}\r\n\r\n/* SIDEBAR */\r\n\r\n.sidebar {\r\n    background: #ADDCFF;\r\n    grid-column: 1 / 2;\r\n    grid-row: 2 / 3;\r\n    color: gray;\r\n    font-size: 1.5rem;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    min-width: 200px;\r\n}\r\n\r\n.sidebar span {\r\n    align-self: center;\r\n}\r\n\r\n.filters,\r\n.projects {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n}\r\n\r\n.sidebar-container {\r\n    background: white;\r\n    padding: 0.75rem;\r\n    border-radius: 8px;\r\n    border: 1px solid white;\r\n    font-size: 1.2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow: hidden;\r\n}\r\n\r\n.sidebar-container:hover {\r\n    border: 1px solid gray;\r\n    cursor: pointer;\r\n}\r\n\r\n.selected {\r\n    background: #ffdeb3;\r\n    border: 1px solid #ffdeb3;\r\n}\r\n\r\n.projects-title,\r\n.todos-title {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 1rem;\r\n    gap: 0.5rem;\r\n}\r\n\r\n/* CONTENT */\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    margin: 0 25%;\r\n    color: gray;\r\n    min-width: 300px;\r\n}\r\n\r\n.todo-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    overflow: hidden;\r\n    flex: 1;\r\n}\r\n\r\n.todo-info span,\r\n.sidebar-container span {\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.checkbox {\r\n    min-width: 1rem;\r\n    min-height: 1rem;\r\n    border-radius: 5px;\r\n    border: 2px solid gray;\r\n    background: white;\r\n}\r\n\r\n.complete {\r\n    background: url(./images/icons8-check-30.png) no-repeat center;\r\n    background-size: fill;\r\n}\r\n\r\n.todos-title {\r\n    font-size: 2.5rem;\r\n    border-bottom: 2px solid #EBF6FF;\r\n}\r\n\r\n.content-container {\r\n    font-size: 1.1rem;\r\n    padding: 1rem;\r\n    border-bottom: 2px solid #EBF6FF;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 0.5rem;\r\n    align-items: center;\r\n\r\n}\r\n\r\n.content-container:hover {\r\n    background: #EBF6FF;\r\n    cursor: pointer;\r\n}\r\n\r\n.date {\r\n    font-size: 0.75rem;\r\n    margin-left: auto;\r\n    white-space: nowrap;\r\n}\r\n\r\n/* BUTTONS */\r\n\r\nimg:hover {\r\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\r\n    cursor: pointer;\r\n}\r\n\r\n.action-buttons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.add-button,\r\n.edit-button,\r\n.delete-button,\r\n.info-button {\r\n    height: 1.5rem;\r\n}\r\n\r\n/* MODAL */\r\n\r\n.modal {\r\n    display: none;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    /* Semi-transparent black background */\r\n}\r\n\r\n.modal-container {\r\n    background-color: white;\r\n    margin: 10% auto;\r\n    border: 1px solid gray;\r\n    width: max(320px, 30%);\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.modal-title {\r\n    grid-row: 1 / 2;\r\n    background: #1F9EFF;\r\n    font-size: 2rem;\r\n    color: white;\r\n    padding: 1rem 1.5rem;\r\n}\r\n\r\n.modal-content {\r\n    grid-row: 2 / 3;\r\n    padding: 1rem 1.5rem;\r\n    font-size: 1.3rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n}\r\n\r\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\r\n\r\n#new-project-modal,\r\n#edit-project-modal,\r\n#new-todo-modal, #edit-todo-modal, #todo-info-modal {\r\n    display: none;\r\n}\r\n\r\n\r\n\r\n#todo-info-modal .attribute-container {\r\n    border-bottom: 2px solid #EBF6FF;\r\n    padding-bottom: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.attribute-container .attribute {\r\n    width: 150px;\r\n}\r\n\r\n.attribute-container .value {\r\n    color: gray;\r\n    font-size: 1rem;\r\n    flex: 1;\r\n}\r\n\r\n.attribute-container .todo-description {\r\n    height: 100px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n/* FORM STYLES */\r\n\r\ninput,\r\nselect {\r\n    border: 2px solid gray;\r\n    outline: none;\r\n    border-radius: 5px;\r\n    height: 2rem;\r\n    font-size: 1rem;\r\n    padding-left: 0.5rem;\r\n}\r\n\r\n.modal-content .action-buttons {\r\n    justify-content: flex-end;\r\n    gap: 1rem;\r\n}\r\n\r\n.required {\r\n    color: red;\r\n}\r\n\r\n.error-text {\r\n    display: none;\r\n    color: red;\r\n    font-size: 0.8rem;\r\n}\r\n\r\nbutton {\r\n    background: #1F9EFF;\r\n    color: white;\r\n    padding: 0.75rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 1.3rem;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background: #1b87da;\r\n}'],sourceRoot:""}]);const u=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(r)for(var l=0;l<this.length;l++){var a=this[l][0];null!=a&&(d[a]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&d[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},d=[],l=0;l<e.length;l++){var a=e[l],c=r.base?a[0]+r.base:a[0],s=i[c]||0,A="".concat(c," ").concat(s);i[c]=s+1;var u=t(A),p={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=l,n.splice(l,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var l=t(i[d]);n[l].references--}for(var a=r(e,o),c=0;c<i.length;c++){var s=t(i[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=a}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},718:(e,n,t)=>{e.exports=t.p+"1f83024f4bb8dc3ad757.png"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),d=t.n(i),l=t(565),a=t.n(l),c=t(216),s=t.n(c),A=t(589),u=t.n(A),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=a(),m.insert=d().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=(()=>{let e=[{title:"First Project",todos:[{title:"Walk my dog",description:"I need to walk my dog today.",date:"2023-07-16",priority:"high",complete:!1}],selected:!1}];const n=()=>{let n=[];for(let t of e)for(let e of t.todos)n.push(e);return n};let t=[{title:"All",todos:n(),selected:!0},{title:"Important",todos:n().filter((e=>"high"===e.priority)),selected:!1},{title:"Completed",todos:n().filter((e=>e.complete)),selected:!1}];return{projects:e,filters:t,getAllFilters:()=>{console.log("info.projects"),console.log(e);let n=[];for(let e of t)n.push(e);for(let t of e)n.push(t);return n}}})();class g{constructor(e){this.title=e,this.todos=[],this.selected=!1}get title(){return this._title}set title(e){this._title=e}set selected(e){this._selected=e}get selected(){return this._selected}addTodo(e){this.todos.push(e)}removeTodo(e){this.todos.pop(e)}}const C={newProjectModal:{element:document.querySelector("#new-project-modal"),titleField:document.querySelector("#new-project-modal .project-title"),errorText:document.querySelector("#new-project-modal .error-text")},editProjectModal:{element:document.querySelector("#edit-project-modal"),titleField:document.querySelector("#edit-project-modal .project-title"),errorText:document.querySelector("#edit-project-modal .error-text")},newTodoModal:{element:document.querySelector("#new-todo-modal"),titleField:document.querySelector("#new-todo-modal .todo-title"),descField:document.querySelector("#new-todo-modal .todo-description"),dueDateField:document.querySelector("#new-todo-modal .todo-date"),priorityField:document.querySelector("#new-todo-modal .todo-priority"),errorText:document.querySelector("#new-todo-modal .error-text")},editTodoModal:{element:document.querySelector("#edit-todo-modal"),titleField:document.querySelector("#edit-todo-modal .todo-title"),descField:document.querySelector("#edit-todo-modal .todo-description"),dueDateField:document.querySelector("#edit-todo-modal .todo-date"),priorityField:document.querySelector("#edit-todo-modal .todo-priority"),errorText:document.querySelector("#edit-todo-modal .error-text")},todoInfoModal:{element:document.querySelector("#todo-info-modal"),titleField:document.querySelector("#todo-info-modal .todo-title"),descField:document.querySelector("#todo-info-modal .todo-description"),dueDateField:document.querySelector("#todo-info-modal .todo-date"),priorityField:document.querySelector("#todo-info-modal .todo-priority"),completeField:document.querySelector("#todo-info-modal .todo-complete"),projectField:document.querySelector("#todo-info-modal .todo-project")}};class B{constructor(e,n,t,r){this.title=e,this.description=n,this.date=t,this.priority=r,this.complete=!1}get title(){return this._title}set title(e){this._title=e}get description(){return this._description}set description(e){this._description=e}get date(){return this._date}set date(e){this._date=e}get priority(){return this._priority}set priority(e){this._priority=e}get complete(){return this._complete}set complete(e){this._complete=e}}const b=(()=>{const e=document.querySelector(".new-project-button"),n=document.querySelector(".modal"),t=document.querySelectorAll(".cancel-button"),r=document.querySelectorAll(".confirm-button"),o=document.querySelector(".new-todo-button");let i,d;function l(e){return e.target.closest(".content-container").getAttribute("index")}function a(e){const n=e.titleField.value;let t,r,o;e!==C.newTodoModal&&e!==C.editTodoModal||(t=e.descField.value,r=e.dueDateField.value,o=e.priorityField.value),""!==n?(e===C.newProjectModal?function(e){const n=new g(e);f.projects.push(n)}(n):e===C.editProjectModal?function(e,n){e.title=n}(d,n):e===C.newTodoModal?function(e,n,t,r){const o=new B(e,n,t,r);s().todos.push(o)}(n,t,r,o):e===C.editTodoModal&&function(e,n,t,r,o){e.title=n,e.description=t,e.date=r,e.priority=o}(s().todos[i],n,t,r,o),I.closeModal(e),I.updateDisplay()):I.displayError(e)}function c(e){const n=e.target.closest(".sidebar-container").getAttribute("title");return f.getAllFilters().filter((e=>e.title===n))[0]}function s(){return f.getAllFilters().filter((e=>e.selected))[0]}function A(){let e=null;for(let n in C)if(C.hasOwnProperty(n)){const t=C[n];"block"===t.element.style.display&&(e=t)}return e}return e.addEventListener("click",(e=>{I.displayModal(e,C.newProjectModal)})),o.addEventListener("click",(e=>{I.displayModal(e,C.newTodoModal)})),n.addEventListener("click",(e=>{e.target.classList.contains("modal")&&I.closeModal(A())})),t.forEach((e=>{e.addEventListener("click",(()=>{I.closeModal(A())}))})),r.forEach((e=>{e.addEventListener("click",(()=>{a(A())})),document.addEventListener("keydown",(e=>{"Enter"===e.key&&"block"===n.style.display&&a(A())}))})),{handleEditButtonClick:function(e,n){"todo"===n&&(i=l(e),I.displayModal(e,C.editTodoModal,i)),"project"===n&&(d=c(e),I.displayModal(e,C.editProjectModal))},handleDeleteButtonClick:function(e,n){"todo"===n&&(i=l(e),function(e){s().todos.splice(e,1)}(i)),"project"===n&&function(e){const n=f.projects.findIndex((n=>n===e));f.projects.splice(n,1)}(c(e)),I.updateDisplay()},handleTodoClick:function(e){(function(e){const n=function(e){return s().todos[e]}(e);n.complete=!n.complete})(l(e)),I.updateDisplay()},handleTodoInfoClick:function(e){i=l(e),I.displayModal(e,C.todoInfoModal,i)},handleFilterClick:function(e){d=c(e),s()&&(s().selected=!1),d.selected=!0,I.updateDisplay()},setDefaultFilter:function(){s()||(f.filters.filter((e=>"All"===e.title))[0].selected=!0)},getSelectedFilter:s,getFilterObject:c}})(),I=(()=>{const e=document.querySelector(".modal"),n=document.querySelector(".projects"),t=document.querySelector(".todos"),r=document.querySelector(".filters");function o(e,n="",t="",r="",o="",i="",d=""){e.element.style.display="block",e===C.todoInfoModal?(o=o.charAt(0).toUpperCase()+o.slice(1),e.titleField.textContent=n,e.descField.textContent=t,e.dueDateField.textContent=r,e.priorityField.textContent=o,e.completeField.textContent=i?"Yes":"No",e.projectField.textContent=d):(e.titleField.value=n,e.titleField.focus(),e===C.editTodoModal&&(e.descField.value=t,e.dueDateField.value=r,e.priorityField.querySelector("option[value="+o+"]").selected=!0))}function i(e,n,t){e.complete&&(n.classList.add("complete"),t.style.textDecoration="line-through"),"low"===e.priority&&(t.style.color="#32CD32"),"medium"===e.priority&&(t.style.color="#DAA520"),"high"===e.priority&&(t.style.color="#FF6347")}function d(e){e.classList.add("selected")}return{displayModal:function(n,t,r=null){if(e.style.display="block",t!==C.newProjectModal&&t!==C.newTodoModal||o(t),t===C.editTodoModal||t===C.todoInfoModal){const e=b.getSelectedFilter(),n=e.todos[r],i=n.title,d=n.description,l=n.date,a=n.priority;t===C.todoInfoModal?o(t,i,d,l,a,n.complete,e.title):o(t,i,d,l,a)}t===C.editProjectModal&&o(t,b.getFilterObject(n).title)},closeModal:function(n){e.style.display="none",n.element.style.display="none",n!==C.todoInfoModal&&function(e){e.errorText.style.display="none",e.titleField.value="",e===C.newTodoModal&&(e.descField.value="",e.dueDateField.value="",e.priorityField.selectedIndex=0)}(n)},displayError:function(e){e.errorText.style.display="block"},updateDisplay:function(){b.setDefaultFilter(),function(){!function(){for(;r.firstChild;)r.removeChild(r.firstChild)}();for(let e=0;e<f.filters.length;e++){const n=document.createElement("div");n.classList.add("sidebar-container"),n.setAttribute("title",f.filters[e].title),n.addEventListener("click",(e=>{b.handleFilterClick(e)})),f.filters[e].selected&&d(n);const t=document.createElement("span");t.textContent=f.filters[e].title,n.appendChild(t),r.appendChild(n)}}(),function(){!function(){for(;n.firstChild;)n.removeChild(n.firstChild)}();for(let e=0;e<f.projects.length;e++){const t=document.createElement("div");t.classList.add("sidebar-container"),t.setAttribute("title",f.projects[e].title),t.addEventListener("click",(e=>{e.stopPropagation(),b.handleFilterClick(e)})),f.projects[e].selected&&d(t);const r=document.createElement("span");r.textContent=f.projects[e].title;const o=document.createElement("div");o.classList.add("action-buttons");const i=document.createElement("img");if(i.src="../src/images/icons8-edit-30.png",i.classList.add("edit-button"),i.classList.add("edit-project-button"),i.addEventListener("click",(e=>{e.stopPropagation(),b.handleEditButtonClick(e,"project")})),f.projects.length>1){const e=document.createElement("img");e.src="../src/images/icons8-delete-24.png",e.classList.add("delete-button"),e.classList.add("delete-project-button"),e.addEventListener("click",(e=>{e.stopPropagation(),b.handleDeleteButtonClick(e,"project")})),o.append(i,e)}else o.appendChild(i);t.append(r,o),n.appendChild(t)}}(),function(){!function(){for(;t.firstChild;)t.removeChild(t.firstChild)}();const e=f.filters.filter((e=>"All"===e.title))[0].todos;for(let n=0;n<e.length;n++){const r=document.createElement("div");r.classList.add("content-container"),r.setAttribute("index",n),r.addEventListener("click",b.handleTodoClick);const o=document.createElement("div");o.classList.add("todo-info");const d=document.createElement("div");d.classList.add("checkbox");const l=document.createElement("span");l.textContent=e[n].title;const a=document.createElement("div");a.classList.add("date"),a.textContent=e[n].date,i(e[n],d,l),o.append(d,l,a);const c=document.createElement("div");c.classList.add("action-buttons");const s=document.createElement("img");s.src="../src/images/icons8-edit-30.png",s.classList.add("edit-button"),s.classList.add("edit-todo-button"),s.addEventListener("click",(e=>{e.stopPropagation(),b.handleEditButtonClick(e,"todo")}));const A=document.createElement("img");A.src="../src/images/icons8-delete-24.png",A.classList.add("delete-button"),A.classList.add("delete-todo-button"),A.addEventListener("click",(e=>{e.stopPropagation(),b.handleDeleteButtonClick(e,"todo")}));const u=document.createElement("img");u.src="../src/images/icons8-info-24.png",u.classList.add("info-button"),u.addEventListener("click",(e=>{e.stopPropagation(),b.handleTodoInfoClick(e)})),c.append(s,A,u),r.append(o,c),t.appendChild(r)}}()}}})();I.updateDisplay()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cUNBQ25Cc0ksRUFBYWpELFVBQVU2QixJQUFJLGlCQUMzQm9CLEVBQWFqRCxVQUFVNkIsSUFBSSxzQkFDM0JvQixFQUFhbkQsaUJBQWlCLFNBQVVwSSxJQUNwQ0EsRUFBRW1MLGtCQUNGLEVBQVF2Qyx3QkFBd0I1SSxFQUFHLE9BQU8sSUFHOUMsTUFBTTZMLEVBQWFuTSxTQUFTVyxjQUFjLE9BQzFDd0wsRUFBVzVJLElBQU0sbUNBQ2pCNEksRUFBV3ZELFVBQVU2QixJQUFJLGVBQ3pCMEIsRUFBV3pELGlCQUFpQixTQUFVcEksSUFDbENBLEVBQUVtTCxrQkFDRixFQUFROUIsb0JBQW9CckosRUFBRSxJQUlsQ3FMLEVBQWNHLE9BQU9GLEVBQVlDLEVBQWNNLEdBRy9DRixFQUFjSCxPQUFPSSxFQUFVUCxHQUcvQjVCLEVBQWV0SixZQUFZd0wsRUFDL0IsQ0FDSixDQThCSUcsRUFDSixFQVNILEVBN1RXLEdDRFosRUFBSWpFLGUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9JbmZvLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9Qcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9Nb2RhbHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL1RvZG8uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL0hhbmRsZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL0RPTS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vaW1hZ2VzL2ljb25zOC1jaGVjay0zMC5wbmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYCoge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LFxyXG4gICAgICAgIENhbnRhcmVsbCwgXCJPcGVuIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNGZyO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4vKiBIRUFERVIgKi9cclxuLmhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMUY5RUZGO1xyXG4gICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcclxuICAgIGdyaWQtcm93OiAxIC8gMjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDFyZW0gNXJlbTtcclxufVxyXG5cclxuLyogU0lERUJBUiAqL1xyXG5cclxuLnNpZGViYXIge1xyXG4gICAgYmFja2dyb3VuZDogI0FERENGRjtcclxuICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcclxuICAgIGdyaWQtcm93OiAyIC8gMztcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiAgICBwYWRkaW5nOiAycmVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBnYXA6IDJyZW07XHJcbiAgICBtaW4td2lkdGg6IDIwMHB4O1xyXG59XHJcblxyXG4uc2lkZWJhciBzcGFuIHtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxufVxyXG5cclxuLmZpbHRlcnMsXHJcbi5wcm9qZWN0cyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGdhcDogMS41cmVtO1xyXG59XHJcblxyXG4uc2lkZWJhci1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAwLjc1cmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLnNpZGViYXItY29udGFpbmVyOmhvdmVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZkZWIzO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZGViMztcclxufVxyXG5cclxuLnByb2plY3RzLXRpdGxlLFxyXG4udG9kb3MtdGl0bGUge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBwYWRkaW5nOiAwIDFyZW07XHJcbiAgICBnYXA6IDAuNXJlbTtcclxufVxyXG5cclxuLyogQ09OVEVOVCAqL1xyXG5cclxuLmNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgbWFyZ2luOiAwIDI1JTtcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgbWluLXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuLnRvZG8taW5mbyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMXJlbTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBmbGV4OiAxO1xyXG59XHJcblxyXG4udG9kby1pbmZvIHNwYW4sXHJcbi5zaWRlYmFyLWNvbnRhaW5lciBzcGFuIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbn1cclxuXHJcbi5jaGVja2JveCB7XHJcbiAgICBtaW4td2lkdGg6IDFyZW07XHJcbiAgICBtaW4taGVpZ2h0OiAxcmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcblxyXG4uY29tcGxldGUge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fX30pIG5vLXJlcGVhdCBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGZpbGw7XHJcbn1cclxuXHJcbi50b2Rvcy10aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjRUJGNkZGO1xyXG59XHJcblxyXG4uY29udGVudC1jb250YWluZXIge1xyXG4gICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNFQkY2RkY7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgZ2FwOiAwLjVyZW07XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxufVxyXG5cclxuLmNvbnRlbnQtY29udGFpbmVyOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6ICNFQkY2RkY7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5kYXRlIHtcclxuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxufVxyXG5cclxuLyogQlVUVE9OUyAqL1xyXG5cclxuaW1nOmhvdmVyIHtcclxuICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpIGNvbnRyYXN0KDEwMDAwJSkgYnJpZ2h0bmVzcygwJSk7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5hY3Rpb24tYnV0dG9ucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGdhcDogMC41cmVtO1xyXG59XHJcblxyXG4uYWRkLWJ1dHRvbixcclxuLmVkaXQtYnV0dG9uLFxyXG4uZGVsZXRlLWJ1dHRvbixcclxuLmluZm8tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMS41cmVtO1xyXG59XHJcblxyXG4vKiBNT0RBTCAqL1xyXG5cclxuLm1vZGFsIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICAvKiBTZW1pLXRyYW5zcGFyZW50IGJsYWNrIGJhY2tncm91bmQgKi9cclxufVxyXG5cclxuLm1vZGFsLWNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIG1hcmdpbjogMTAlIGF1dG87XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xyXG4gICAgd2lkdGg6IG1heCgzMjBweCwgMzAlKTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4ubW9kYWwtdGl0bGUge1xyXG4gICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgYmFja2dyb3VuZDogIzFGOUVGRjtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDFyZW0gMS41cmVtO1xyXG59XHJcblxyXG4ubW9kYWwtY29udGVudCB7XHJcbiAgICBncmlkLXJvdzogMiAvIDM7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcclxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBnYXA6IDFyZW07XHJcbn1cclxuXHJcbi8qIERJRkZFUkVOVCBNT0RBTCBESVNQTEFZIENPTlRBSU5FUlMgKi9cclxuXHJcbiNuZXctcHJvamVjdC1tb2RhbCxcclxuI2VkaXQtcHJvamVjdC1tb2RhbCxcclxuI25ldy10b2RvLW1vZGFsLCAjZWRpdC10b2RvLW1vZGFsLCAjdG9kby1pbmZvLW1vZGFsIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcblxyXG5cclxuI3RvZG8taW5mby1tb2RhbCAuYXR0cmlidXRlLWNvbnRhaW5lciB7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI0VCRjZGRjtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxcmVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5hdHRyaWJ1dGUtY29udGFpbmVyIC5hdHRyaWJ1dGUge1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG59XHJcblxyXG4uYXR0cmlidXRlLWNvbnRhaW5lciAudmFsdWUge1xyXG4gICAgY29sb3I6IGdyYXk7XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBmbGV4OiAxO1xyXG59XHJcblxyXG4uYXR0cmlidXRlLWNvbnRhaW5lciAudG9kby1kZXNjcmlwdGlvbiB7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG59XHJcblxyXG4vKiBGT1JNIFNUWUxFUyAqL1xyXG5cclxuaW5wdXQsXHJcbnNlbGVjdCB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGhlaWdodDogMnJlbTtcclxuICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgIHBhZGRpbmctbGVmdDogMC41cmVtO1xyXG59XHJcblxyXG4ubW9kYWwtY29udGVudCAuYWN0aW9uLWJ1dHRvbnMge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgIGdhcDogMXJlbTtcclxufVxyXG5cclxuLnJlcXVpcmVkIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5lcnJvci10ZXh0IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiAwLjhyZW07XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMUY5RUZGO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMC43NXJlbTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogIzFiODdkYTtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJOzREQUN3RDtJQUN4RCxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxTQUFTO0lBQ1QsYUFBYTtJQUNiLDhCQUE4QjtJQUM5Qiw0QkFBNEI7SUFDNUIsaUJBQWlCO0FBQ3JCOztBQUVBLFdBQVc7QUFDWDtJQUNJLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBLFlBQVk7O0FBRVo7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7O0lBRUksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixlQUFlO0FBQ25COztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLHlCQUF5QjtBQUM3Qjs7QUFFQTs7SUFFSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixlQUFlO0lBQ2YsV0FBVztBQUNmOztBQUVBLFlBQVk7O0FBRVo7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixhQUFhO0lBQ2IsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsU0FBUztJQUNULGdCQUFnQjtJQUNoQixPQUFPO0FBQ1g7O0FBRUE7O0lBRUkscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG9FQUE4RDtJQUM5RCxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixnQ0FBZ0M7SUFDaEMsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixXQUFXO0lBQ1gsbUJBQW1COztBQUV2Qjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixtQkFBbUI7QUFDdkI7O0FBRUEsWUFBWTs7QUFFWjtJQUNJLHVEQUF1RDtJQUN2RCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7SUFDOUIsV0FBVztBQUNmOztBQUVBOzs7O0lBSUksY0FBYztBQUNsQjs7QUFFQSxVQUFVOztBQUVWO0lBQ0ksYUFBYTtJQUNiLGVBQWU7SUFDZixVQUFVO0lBQ1YsT0FBTztJQUNQLE1BQU07SUFDTixXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxvQ0FBb0M7SUFDcEMsc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixZQUFZO0lBQ1osb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0FBQ2I7O0FBRUEsdUNBQXVDOztBQUV2Qzs7O0lBR0ksYUFBYTtBQUNqQjs7OztBQUlBO0lBQ0ksZ0NBQWdDO0lBQ2hDLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxlQUFlO0lBQ2YsT0FBTztBQUNYOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtBQUN0Qjs7QUFFQSxnQkFBZ0I7O0FBRWhCOztJQUVJLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixlQUFlO0lBQ2Ysb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGFBQWE7SUFDYixVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJTb3VyY2UgU2FucyBQcm9cXFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFxcXCJTZWdvZSBVSVxcXCIsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsXFxyXFxuICAgICAgICBDYW50YXJlbGwsIFxcXCJPcGVuIFNhbnNcXFwiLCBcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLCBzYW5zLXNlcmlmO1xcclxcbiAgICBmb250LXdlaWdodDogNTAwO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnI7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byAxZnI7XFxyXFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBIRUFERVIgKi9cXHJcXG4uaGVhZGVyIHtcXHJcXG4gICAgYmFja2dyb3VuZDogIzFGOUVGRjtcXHJcXG4gICAgZm9udC1zaXplOiAzcmVtO1xcclxcbiAgICBncmlkLWNvbHVtbjogc3BhbiAyO1xcclxcbiAgICBncmlkLXJvdzogMSAvIDI7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgcGFkZGluZzogMXJlbSA1cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBTSURFQkFSICovXFxyXFxuXFxyXFxuLnNpZGViYXIge1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjQUREQ0ZGO1xcclxcbiAgICBncmlkLWNvbHVtbjogMSAvIDI7XFxyXFxuICAgIGdyaWQtcm93OiAyIC8gMztcXHJcXG4gICAgY29sb3I6IGdyYXk7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgICBwYWRkaW5nOiAycmVtO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBnYXA6IDJyZW07XFxyXFxuICAgIG1pbi13aWR0aDogMjAwcHg7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyIHNwYW4ge1xcclxcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5maWx0ZXJzLFxcclxcbi5wcm9qZWN0cyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGdhcDogMS41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1jb250YWluZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG4gICAgcGFkZGluZzogMC43NXJlbTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcXHJcXG4gICAgZm9udC1zaXplOiAxLjJyZW07XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXItY29udGFpbmVyOmhvdmVyIHtcXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uc2VsZWN0ZWQge1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjZmZkZWIzO1xcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZkZWIzO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdHMtdGl0bGUsXFxyXFxuLnRvZG9zLXRpdGxlIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgICBwYWRkaW5nOiAwIDFyZW07XFxyXFxuICAgIGdhcDogMC41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBDT05URU5UICovXFxyXFxuXFxyXFxuLmNvbnRlbnQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgICBtYXJnaW46IDAgMjUlO1xcclxcbiAgICBjb2xvcjogZ3JheTtcXHJcXG4gICAgbWluLXdpZHRoOiAzMDBweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG8taW5mbyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGdhcDogMXJlbTtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gICAgZmxleDogMTtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG8taW5mbyBzcGFuLFxcclxcbi5zaWRlYmFyLWNvbnRhaW5lciBzcGFuIHtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG59XFxyXFxuXFxyXFxuLmNoZWNrYm94IHtcXHJcXG4gICAgbWluLXdpZHRoOiAxcmVtO1xcclxcbiAgICBtaW4taGVpZ2h0OiAxcmVtO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XFxyXFxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG4uY29tcGxldGUge1xcclxcbiAgICBiYWNrZ3JvdW5kOiB1cmwoLi9pbWFnZXMvaWNvbnM4LWNoZWNrLTMwLnBuZykgbm8tcmVwZWF0IGNlbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1zaXplOiBmaWxsO1xcclxcbn1cXHJcXG5cXHJcXG4udG9kb3MtdGl0bGUge1xcclxcbiAgICBmb250LXNpemU6IDIuNXJlbTtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNFQkY2RkY7XFxyXFxufVxcclxcblxcclxcbi5jb250ZW50LWNvbnRhaW5lciB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xcclxcbiAgICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI0VCRjZGRjtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgICBnYXA6IDAuNXJlbTtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLmNvbnRlbnQtY29udGFpbmVyOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZDogI0VCRjZGRjtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uZGF0ZSB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxyXFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxyXFxufVxcclxcblxcclxcbi8qIEJVVFRPTlMgKi9cXHJcXG5cXHJcXG5pbWc6aG92ZXIge1xcclxcbiAgICBmaWx0ZXI6IGdyYXlzY2FsZSgxMDAlKSBjb250cmFzdCgxMDAwMCUpIGJyaWdodG5lc3MoMCUpO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5hY3Rpb24tYnV0dG9ucyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gICAgZ2FwOiAwLjVyZW07XFxyXFxufVxcclxcblxcclxcbi5hZGQtYnV0dG9uLFxcclxcbi5lZGl0LWJ1dHRvbixcXHJcXG4uZGVsZXRlLWJ1dHRvbixcXHJcXG4uaW5mby1idXR0b24ge1xcclxcbiAgICBoZWlnaHQ6IDEuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLyogTU9EQUwgKi9cXHJcXG5cXHJcXG4ubW9kYWwge1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICAgIHotaW5kZXg6IDE7XFxyXFxuICAgIGxlZnQ6IDA7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcXHJcXG4gICAgLyogU2VtaS10cmFuc3BhcmVudCBibGFjayBiYWNrZ3JvdW5kICovXFxyXFxufVxcclxcblxcclxcbi5tb2RhbC1jb250YWluZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgbWFyZ2luOiAxMCUgYXV0bztcXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcXHJcXG4gICAgd2lkdGg6IG1heCgzMjBweCwgMzAlKTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGFsLXRpdGxlIHtcXHJcXG4gICAgZ3JpZC1yb3c6IDEgLyAyO1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjMUY5RUZGO1xcclxcbiAgICBmb250LXNpemU6IDJyZW07XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgcGFkZGluZzogMXJlbSAxLjVyZW07XFxyXFxufVxcclxcblxcclxcbi5tb2RhbC1jb250ZW50IHtcXHJcXG4gICAgZ3JpZC1yb3c6IDIgLyAzO1xcclxcbiAgICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcXHJcXG4gICAgZm9udC1zaXplOiAxLjNyZW07XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGdhcDogMXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLyogRElGRkVSRU5UIE1PREFMIERJU1BMQVkgQ09OVEFJTkVSUyAqL1xcclxcblxcclxcbiNuZXctcHJvamVjdC1tb2RhbCxcXHJcXG4jZWRpdC1wcm9qZWN0LW1vZGFsLFxcclxcbiNuZXctdG9kby1tb2RhbCwgI2VkaXQtdG9kby1tb2RhbCwgI3RvZG8taW5mby1tb2RhbCB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbiN0b2RvLWluZm8tbW9kYWwgLmF0dHJpYnV0ZS1jb250YWluZXIge1xcclxcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI0VCRjZGRjtcXHJcXG4gICAgcGFkZGluZy1ib3R0b206IDFyZW07XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5hdHRyaWJ1dGUtY29udGFpbmVyIC5hdHRyaWJ1dGUge1xcclxcbiAgICB3aWR0aDogMTUwcHg7XFxyXFxufVxcclxcblxcclxcbi5hdHRyaWJ1dGUtY29udGFpbmVyIC52YWx1ZSB7XFxyXFxuICAgIGNvbG9yOiBncmF5O1xcclxcbiAgICBmb250LXNpemU6IDFyZW07XFxyXFxuICAgIGZsZXg6IDE7XFxyXFxufVxcclxcblxcclxcbi5hdHRyaWJ1dGUtY29udGFpbmVyIC50b2RvLWRlc2NyaXB0aW9uIHtcXHJcXG4gICAgaGVpZ2h0OiAxMDBweDtcXHJcXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBGT1JNIFNUWUxFUyAqL1xcclxcblxcclxcbmlucHV0LFxcclxcbnNlbGVjdCB7XFxyXFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgaGVpZ2h0OiAycmVtO1xcclxcbiAgICBmb250LXNpemU6IDFyZW07XFxyXFxuICAgIHBhZGRpbmctbGVmdDogMC41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4ubW9kYWwtY29udGVudCAuYWN0aW9uLWJ1dHRvbnMge1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcclxcbiAgICBnYXA6IDFyZW07XFxyXFxufVxcclxcblxcclxcbi5yZXF1aXJlZCB7XFxyXFxuICAgIGNvbG9yOiByZWQ7XFxyXFxufVxcclxcblxcclxcbi5lcnJvci10ZXh0IHtcXHJcXG4gICAgZGlzcGxheTogbm9uZTtcXHJcXG4gICAgY29sb3I6IHJlZDtcXHJcXG4gICAgZm9udC1zaXplOiAwLjhyZW07XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbiB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICMxRjlFRkY7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgcGFkZGluZzogMC43NXJlbTtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbjpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICMxYjg3ZGE7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY29uc3QgSW5mbyA9ICgoKSA9PiB7XHJcbiAgICBsZXQgcHJvamVjdHMgPSBbeyB0aXRsZTogXCJGaXJzdCBQcm9qZWN0XCIsIHRvZG9zOiBbeyB0aXRsZTogXCJXYWxrIG15IGRvZ1wiLCBkZXNjcmlwdGlvbjogXCJJIG5lZWQgdG8gd2FsayBteSBkb2cgdG9kYXkuXCIsIGRhdGU6IFwiMjAyMy0wNy0xNlwiLCBwcmlvcml0eTogXCJoaWdoXCIsIGNvbXBsZXRlOiBmYWxzZSB9XSwgc2VsZWN0ZWQ6IGZhbHNlIH1dO1xyXG5cclxuICAgIC8vIGZ1bmN0aW9uIHJldHVybnMgYW4gYXJyYXkgd2l0aCBhbGwgdG9kb3NcclxuICAgIGNvbnN0IGdldEFsbFRvZG9zID0gKCkgPT4ge1xyXG4gICAgICAgIGxldCBhbGxUb2RvcyA9IFtdO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBwcm9qZWN0IG9mIHByb2plY3RzKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IHRvZG8gb2YgcHJvamVjdC50b2Rvcykge1xyXG4gICAgICAgICAgICAgICAgYWxsVG9kb3MucHVzaCh0b2RvKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYWxsVG9kb3M7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZnVuY3Rpb24gcmV0dXJucyBhbiBhcnJheSB3aXRoIGhpZ2ggcHJpb3JpdHkgdG9kb3NcclxuICAgIGNvbnN0IGdldEltcG9ydGFudFRvZG9zID0gKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBnZXRBbGxUb2RvcygpLmZpbHRlcih0b2RvID0+IHRvZG8ucHJpb3JpdHkgPT09IFwiaGlnaFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBnZXRDb21wbGV0ZVRvZG9zID0gKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBnZXRBbGxUb2RvcygpLmZpbHRlcih0b2RvID0+IHRvZG8uY29tcGxldGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHJldHVybiBhcnJheSB0aGF0IGNvbnRhaW5zIGFsbCBwcm9qZWN0cyBhbmQgZmlsdGVyc1xyXG4gICAgY29uc3QgZ2V0QWxsRmlsdGVycyA9ICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImluZm8ucHJvamVjdHNcIilcclxuICAgICAgICBjb25zb2xlLmxvZyhwcm9qZWN0cylcclxuICAgICAgICBsZXQgYXJyYXkgPSBbXTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgZmlsdGVyIG9mIGZpbHRlcnMpIHtcclxuICAgICAgICAgICAgYXJyYXkucHVzaChmaWx0ZXIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yIChsZXQgcHJvamVjdCBvZiBwcm9qZWN0cykge1xyXG4gICAgICAgICAgICBhcnJheS5wdXNoKHByb2plY3QpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGFycmF5O1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBmaWx0ZXJzID0gW3tcclxuICAgICAgICB0aXRsZTogXCJBbGxcIixcclxuICAgICAgICB0b2RvczogZ2V0QWxsVG9kb3MoKSxcclxuICAgICAgICBzZWxlY3RlZDogdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGl0bGU6IFwiSW1wb3J0YW50XCIsXHJcbiAgICAgICAgdG9kb3M6IGdldEltcG9ydGFudFRvZG9zKCksXHJcbiAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHRpdGxlOiBcIkNvbXBsZXRlZFwiLFxyXG4gICAgICAgIHRvZG9zOiBnZXRDb21wbGV0ZVRvZG9zKCksXHJcbiAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXHJcbiAgICB9XTtcclxuXHJcblxyXG4gICAgcmV0dXJuIHsgcHJvamVjdHMsIGZpbHRlcnMsIGdldEFsbEZpbHRlcnMgfTtcclxufSkoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEluZm87IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvamVjdCB7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGl0bGUpIHtcclxuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XHJcbiAgICAgICAgdGhpcy50b2RvcyA9IFtdO1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgdGl0bGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RpdGxlO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCB0aXRsZSh0aSkge1xyXG4gICAgICAgIHRoaXMuX3RpdGxlID0gdGk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHNlbGVjdGVkKHNlbGVjdCkge1xyXG4gICAgICAgIHRoaXMuX3NlbGVjdGVkID0gc2VsZWN0O1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBzZWxlY3RlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2VsZWN0ZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkVG9kbyh0b2RvKSB7XHJcbiAgICAgICAgdGhpcy50b2Rvcy5wdXNoKHRvZG8pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZVRvZG8odG9kbykge1xyXG4gICAgICAgIHRoaXMudG9kb3MucG9wKHRvZG8pO1xyXG4gICAgfVxyXG59IiwiY29uc3QgTW9kYWxzID0gKCgpID0+IHtcclxuICAgIGNvbnN0IG5ld1Byb2plY3RNb2RhbCA9IHtcclxuICAgICAgICBlbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy1wcm9qZWN0LW1vZGFsXCIpLFxyXG4gICAgICAgIHRpdGxlRmllbGQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LXByb2plY3QtbW9kYWwgLnByb2plY3QtdGl0bGVcIiksXHJcbiAgICAgICAgZXJyb3JUZXh0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy1wcm9qZWN0LW1vZGFsIC5lcnJvci10ZXh0XCIpLFxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGVkaXRQcm9qZWN0TW9kYWwgPSB7XHJcbiAgICAgICAgZWxlbWVudDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LXByb2plY3QtbW9kYWxcIiksXHJcbiAgICAgICAgdGl0bGVGaWVsZDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LXByb2plY3QtbW9kYWwgLnByb2plY3QtdGl0bGVcIiksXHJcbiAgICAgICAgZXJyb3JUZXh0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtcHJvamVjdC1tb2RhbCAuZXJyb3ItdGV4dFwiKSxcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBuZXdUb2RvTW9kYWwgPSB7XHJcbiAgICAgICAgZWxlbWVudDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctdG9kby1tb2RhbFwiKSxcclxuICAgICAgICB0aXRsZUZpZWxkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy10b2RvLW1vZGFsIC50b2RvLXRpdGxlXCIpLFxyXG4gICAgICAgIGRlc2NGaWVsZDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctdG9kby1tb2RhbCAudG9kby1kZXNjcmlwdGlvblwiKSxcclxuICAgICAgICBkdWVEYXRlRmllbGQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LXRvZG8tbW9kYWwgLnRvZG8tZGF0ZVwiKSxcclxuICAgICAgICBwcmlvcml0eUZpZWxkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy10b2RvLW1vZGFsIC50b2RvLXByaW9yaXR5XCIpLFxyXG4gICAgICAgIGVycm9yVGV4dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctdG9kby1tb2RhbCAuZXJyb3ItdGV4dFwiKSxcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBlZGl0VG9kb01vZGFsID0ge1xyXG4gICAgICAgIGVsZW1lbnQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC10b2RvLW1vZGFsXCIpLFxyXG4gICAgICAgIHRpdGxlRmllbGQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC10b2RvLW1vZGFsIC50b2RvLXRpdGxlXCIpLFxyXG4gICAgICAgIGRlc2NGaWVsZDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LXRvZG8tbW9kYWwgLnRvZG8tZGVzY3JpcHRpb25cIiksXHJcbiAgICAgICAgZHVlRGF0ZUZpZWxkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtdG9kby1tb2RhbCAudG9kby1kYXRlXCIpLFxyXG4gICAgICAgIHByaW9yaXR5RmllbGQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC10b2RvLW1vZGFsIC50b2RvLXByaW9yaXR5XCIpLFxyXG4gICAgICAgIGVycm9yVGV4dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LXRvZG8tbW9kYWwgLmVycm9yLXRleHRcIiksXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdG9kb0luZm9Nb2RhbCA9IHtcclxuICAgICAgICBlbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RvZG8taW5mby1tb2RhbFwiKSxcclxuICAgICAgICB0aXRsZUZpZWxkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RvZG8taW5mby1tb2RhbCAudG9kby10aXRsZVwiKSxcclxuICAgICAgICBkZXNjRmllbGQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdG9kby1pbmZvLW1vZGFsIC50b2RvLWRlc2NyaXB0aW9uXCIpLFxyXG4gICAgICAgIGR1ZURhdGVGaWVsZDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0b2RvLWluZm8tbW9kYWwgLnRvZG8tZGF0ZVwiKSxcclxuICAgICAgICBwcmlvcml0eUZpZWxkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RvZG8taW5mby1tb2RhbCAudG9kby1wcmlvcml0eVwiKSxcclxuICAgICAgICBjb21wbGV0ZUZpZWxkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RvZG8taW5mby1tb2RhbCAudG9kby1jb21wbGV0ZVwiKSxcclxuICAgICAgICBwcm9qZWN0RmllbGQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdG9kby1pbmZvLW1vZGFsIC50b2RvLXByb2plY3RcIiksXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHsgbmV3UHJvamVjdE1vZGFsLCBlZGl0UHJvamVjdE1vZGFsLCBuZXdUb2RvTW9kYWwsIGVkaXRUb2RvTW9kYWwsIHRvZG9JbmZvTW9kYWwgfTtcclxufSkoKTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBNb2RhbHM7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9kbyB7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBkYXRlLCBwcmlvcml0eSkge1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgICAgICAgdGhpcy5kYXRlID0gZGF0ZTtcclxuICAgICAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgICAgICAgdGhpcy5jb21wbGV0ZSA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCB0aXRsZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGl0bGU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHRpdGxlKHRpKSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGUgPSB0aTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZGVzY3JpcHRpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rlc2NyaXB0aW9uO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBkZXNjcmlwdGlvbihkZXNjKSB7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb24gPSBkZXNjO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBkYXRlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBkYXRlKGR0KSB7XHJcbiAgICAgICAgdGhpcy5fZGF0ZSA9IGR0O1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBwcmlvcml0eSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcHJpb3JpdHk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHByaW9yaXR5KHByaSkge1xyXG4gICAgICAgIHRoaXMuX3ByaW9yaXR5ID0gcHJpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBjb21wbGV0ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29tcGxldGU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGNvbXBsZXRlKGNvbXApIHtcclxuICAgICAgICB0aGlzLl9jb21wbGV0ZSA9IGNvbXA7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgRE9NIGZyb20gXCIuL0RPTS5qc1wiO1xyXG5pbXBvcnQgSW5mbyBmcm9tIFwiLi9JbmZvLmpzXCI7XHJcbmltcG9ydCBQcm9qZWN0IGZyb20gXCIuL1Byb2plY3QuanNcIjtcclxuaW1wb3J0IE1vZGFscyBmcm9tIFwiLi9Nb2RhbHMuanNcIjtcclxuaW1wb3J0IFRvZG8gZnJvbSBcIi4vVG9kby5qc1wiO1xyXG5cclxuY29uc3QgSGFuZGxlciA9ICgoKSA9PiB7XHJcbiAgICBjb25zdCBuZXdQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uZXctcHJvamVjdC1idXR0b25cIik7XHJcbiAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxcIik7XHJcbiAgICBjb25zdCBjYW5jZWxNb2RhbEJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNhbmNlbC1idXR0b25cIik7XHJcbiAgICBjb25zdCBjb25maXJtTW9kYWxCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jb25maXJtLWJ1dHRvblwiKTtcclxuICAgIGNvbnN0IG5ld1RvZG9CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ldy10b2RvLWJ1dHRvblwiKTtcclxuXHJcbiAgICAvLyBjcmVhdGUgY2xvc3VyZXMgdG8gc3RvcmUgdGhlIHNlbGVjdGVkIGZpbHRlciBvciBpbmRleCBmb3IgZWRpdGluZyBwdXJwb3Nlc1xyXG4gICAgbGV0IGluZGV4O1xyXG4gICAgbGV0IHNlbGVjdGVkRmlsdGVyO1xyXG5cclxuICAgIC8vIGNyZWF0ZSBwcm9qZWN0IGFuZCBhZGQgdG8gcHJvamVjdHMgYXJyYXlcclxuICAgIGZ1bmN0aW9uIGFkZFByb2plY3QodGl0bGUpIHtcclxuICAgICAgICBjb25zdCBwcm9qZWN0ID0gbmV3IFByb2plY3QodGl0bGUpO1xyXG4gICAgICAgIEluZm8ucHJvamVjdHMucHVzaChwcm9qZWN0KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBlZGl0IHByb2plY3QgYnkgY2hhbmdpbmcgaXRzIHRpdGxlIGFuZCB1cGRhdGluZyBkaXNwbGF5XHJcbiAgICBmdW5jdGlvbiBlZGl0UHJvamVjdChwcm9qZWN0LCB0aXRsZSkge1xyXG4gICAgICAgIHByb2plY3QudGl0bGUgPSB0aXRsZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBkZWxldGUgcHJvamVjdCBieSBzcGxpY2luZyBwcm9qZWN0cyBhcnJheSBhdCBwcm9qZWN0J3MgaW5kZXhcclxuICAgIGZ1bmN0aW9uIGRlbGV0ZVByb2plY3Qoc2VsZWN0ZWRQcm9qZWN0KSB7XHJcbiAgICAgICAgY29uc3QgcHJvamVjdEluZGV4ID0gSW5mby5wcm9qZWN0cy5maW5kSW5kZXgocHJvamVjdCA9PiBwcm9qZWN0ID09PSBzZWxlY3RlZFByb2plY3QpO1xyXG4gICAgICAgIEluZm8ucHJvamVjdHMuc3BsaWNlKHByb2plY3RJbmRleCwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gY3JlYXRlIG5ldyB0b2RvXHJcbiAgICBmdW5jdGlvbiBhZGRUb2RvKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHkpIHtcclxuICAgICAgICBjb25zdCB0b2RvID0gbmV3IFRvZG8odGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSk7XHJcbiAgICAgICAgZ2V0U2VsZWN0ZWRGaWx0ZXIoKS50b2Rvcy5wdXNoKHRvZG8pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGdldCB0b2RvIGluZGV4XHJcbiAgICBmdW5jdGlvbiBnZXRUb2RvSW5kZXgoZSkge1xyXG4gICAgICAgIHJldHVybiBlLnRhcmdldC5jbG9zZXN0KFwiLmNvbnRlbnQtY29udGFpbmVyXCIpLmdldEF0dHJpYnV0ZShcImluZGV4XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGdldCB0b2RvIG9iamVjdFxyXG4gICAgZnVuY3Rpb24gZ2V0VG9kbyhpbmRleCkge1xyXG4gICAgICAgIHJldHVybiBnZXRTZWxlY3RlZEZpbHRlcigpLnRvZG9zW2luZGV4XTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBkZWxldGUgdG9kbyBmcm9tIHByb2plY3RcclxuICAgIGZ1bmN0aW9uIGRlbGV0ZVRvZG8oaW5kZXgpIHtcclxuICAgICAgICBnZXRTZWxlY3RlZEZpbHRlcigpLnRvZG9zLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZWRpdFRvZG8odG9kbywgdGl0bGUsIGRlc2NyaXB0aW9uLCBkYXRlLCBwcmlvcml0eSkge1xyXG4gICAgICAgIHRvZG8udGl0bGUgPSB0aXRsZTtcclxuICAgICAgICB0b2RvLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgICAgICAgdG9kby5kYXRlID0gZGF0ZTtcclxuICAgICAgICB0b2RvLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gLy8gdG9nZ2xlIGNvbXBsZXRlL2luY29tcGxldGUgc3RhdHVzIHRvZG9cclxuICAgIGZ1bmN0aW9uIHRvZ2dsZUNvbXBsZXRlKGluZGV4KSB7XHJcbiAgICAgICAgY29uc3QgdG9kbyA9IGdldFRvZG8oaW5kZXgpO1xyXG4gICAgICAgIHRvZG8uY29tcGxldGUgPSAodG9kby5jb21wbGV0ZSkgPyBmYWxzZSA6IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdmFsaWRhdGUgZm9ybVxyXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVGb3JtKG1vZGFsKSB7XHJcbiAgICAgICAgY29uc3QgdGl0bGUgPSBtb2RhbC50aXRsZUZpZWxkLnZhbHVlOyAvL2dldCB0aXRsZSBmcm9tIGlucHV0IGJveFxyXG4gICAgICAgIGxldCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHk7IC8vIGRlY2xhcmUgdG9kbyB2YXJpYWJsZXNcclxuXHJcbiAgICAgICAgLy9pZiB2YWxpZGF0aW5nIGEgdG9kbyBmb3JtIGdldCB0aGUgb3RoZXIgdmFsdWVzXHJcbiAgICAgICAgaWYgKG1vZGFsID09PSBNb2RhbHMubmV3VG9kb01vZGFsIHx8IG1vZGFsID09PSBNb2RhbHMuZWRpdFRvZG9Nb2RhbCkge1xyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbiA9IG1vZGFsLmRlc2NGaWVsZC52YWx1ZTtcclxuICAgICAgICAgICAgZHVlRGF0ZSA9IG1vZGFsLmR1ZURhdGVGaWVsZC52YWx1ZTtcclxuICAgICAgICAgICAgcHJpb3JpdHkgPSBtb2RhbC5wcmlvcml0eUZpZWxkLnZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gaWYgYSB0aXRsZSB3YXMgZW50ZXJlZCBwZXJmb3JtIHRoZSBhcHByb3ByaWF0ZSBhY3Rpb24sIGVsc2UgZGlzcGxheSBlcnJvciBtZXNzYWdlXHJcbiAgICAgICAgaWYgKHRpdGxlICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIC8vIGFkZCBuZXcgcHJvamVjdFxyXG4gICAgICAgICAgICBpZiAobW9kYWwgPT09IE1vZGFscy5uZXdQcm9qZWN0TW9kYWwpIHtcclxuICAgICAgICAgICAgICAgIGFkZFByb2plY3QodGl0bGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIGVkaXQgZXhpc3RpbmcgcHJvamVjdFxyXG4gICAgICAgICAgICBlbHNlIGlmIChtb2RhbCA9PT0gTW9kYWxzLmVkaXRQcm9qZWN0TW9kYWwpIHtcclxuICAgICAgICAgICAgICAgIGVkaXRQcm9qZWN0KHNlbGVjdGVkRmlsdGVyLCB0aXRsZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gY3JlYXRlIG5ldyB0b2RvXHJcbiAgICAgICAgICAgIGVsc2UgaWYgKG1vZGFsID09PSBNb2RhbHMubmV3VG9kb01vZGFsKSB7XHJcbiAgICAgICAgICAgICAgICBhZGRUb2RvKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIGVkaXQgZXhpc3RpbmcgdG9kb1xyXG4gICAgICAgICAgICBlbHNlIGlmIChtb2RhbCA9PT0gTW9kYWxzLmVkaXRUb2RvTW9kYWwpIHtcclxuICAgICAgICAgICAgICAgIGVkaXRUb2RvKGdldFNlbGVjdGVkRmlsdGVyKCkudG9kb3NbaW5kZXhdLCB0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5KVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBET00uY2xvc2VNb2RhbChtb2RhbCk7XHJcbiAgICAgICAgICAgIERPTS51cGRhdGVEaXNwbGF5KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgRE9NLmRpc3BsYXlFcnJvcihtb2RhbCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIHVuc2VsZWN0cyBhIHByb2plY3RcclxuICAgIGZ1bmN0aW9uIHVuc2VsZWN0UHJvamVjdCgpIHtcclxuICAgICAgICAvL2NoZWNrIGZvciBzZWxlY3RlZCBmaWx0ZXJzXHJcbiAgICAgICAgaWYgKGdldFNlbGVjdGVkRmlsdGVyKCkpIHtcclxuICAgICAgICAgICAgZ2V0U2VsZWN0ZWRGaWx0ZXIoKS5zZWxlY3RlZCA9IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIHNlbGVjdHMgYSBwcm9qZWN0IFxyXG4gICAgZnVuY3Rpb24gc2VsZWN0UHJvamVjdChwcm9qZWN0KSB7XHJcbiAgICAgICAgcHJvamVjdC5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gcmV0dXJucyBmaWx0ZXIgb2JqZWN0IGJhc2VkIG9uIHRpdGxlXHJcbiAgICBmdW5jdGlvbiBnZXRGaWx0ZXJPYmplY3QoZSkge1xyXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGUudGFyZ2V0LmNsb3Nlc3QoXCIuc2lkZWJhci1jb250YWluZXJcIik7XHJcbiAgICAgICAgY29uc3QgdGl0bGUgPSBjb250YWluZXIuZ2V0QXR0cmlidXRlKFwidGl0bGVcIik7XHJcblxyXG4gICAgICAgIHJldHVybiBJbmZvLmdldEFsbEZpbHRlcnMoKS5maWx0ZXIoZmlsdGVyID0+IGZpbHRlci50aXRsZSA9PT0gdGl0bGUpWzBdO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHJldHVybnMgc2VsZWN0ZWQgcHJvamVjdC9maWx0ZXIgLSB1c2VkIHRvIG1hbmlwdWxhdGUgaXRzIHRvZG9zL2Rpc3BsYXlcclxuICAgIGZ1bmN0aW9uIGdldFNlbGVjdGVkRmlsdGVyKCkge1xyXG4gICAgICAgIHJldHVybiBJbmZvLmdldEFsbEZpbHRlcnMoKS5maWx0ZXIoZmlsdGVyID0+IGZpbHRlci5zZWxlY3RlZClbMF1cclxuICAgIH1cclxuXHJcbiAgICAvLyBoYW5kbGUgZWRpdCBidXR0b24gY2xpY2tcclxuICAgIGZ1bmN0aW9uIGhhbmRsZUVkaXRCdXR0b25DbGljayhlLCBvYmplY3QpIHtcclxuICAgICAgICBpZiAob2JqZWN0ID09PSBcInRvZG9cIikge1xyXG4gICAgICAgICAgICBpbmRleCA9IGdldFRvZG9JbmRleChlKTtcclxuICAgICAgICAgICAgRE9NLmRpc3BsYXlNb2RhbChlLCBNb2RhbHMuZWRpdFRvZG9Nb2RhbCwgaW5kZXgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKG9iamVjdCA9PT0gXCJwcm9qZWN0XCIpIHtcclxuICAgICAgICAgICAgc2VsZWN0ZWRGaWx0ZXIgPSBnZXRGaWx0ZXJPYmplY3QoZSk7XHJcbiAgICAgICAgICAgIERPTS5kaXNwbGF5TW9kYWwoZSwgTW9kYWxzLmVkaXRQcm9qZWN0TW9kYWwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBoYW5kbGUgZGVsZXRlIGJ1dHRvbiBjbGljayAoaWYgaSBjbGljayBkZWxldGUgdGhlIHByb2plY3QgaXNuJ3QgcmVtb3ZlZCBmcm9tIGFycmF5KVxyXG4gICAgZnVuY3Rpb24gaGFuZGxlRGVsZXRlQnV0dG9uQ2xpY2soZSwgb2JqZWN0KSB7XHJcbiAgICAgICAgLy8gZ2V0IGluZGV4IGJhc2VkIG9uIHR5cGUgb2Ygb2JqZWN0ICh0b2RvIG9yIHByb2plY3QpXHJcbiAgICAgICAgaWYgKG9iamVjdCA9PT0gXCJ0b2RvXCIpIHtcclxuICAgICAgICAgICAgaW5kZXggPSBnZXRUb2RvSW5kZXgoZSk7XHJcbiAgICAgICAgICAgIGRlbGV0ZVRvZG8oaW5kZXgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKG9iamVjdCA9PT0gXCJwcm9qZWN0XCIpIHtcclxuICAgICAgICAgICAgZGVsZXRlUHJvamVjdChnZXRGaWx0ZXJPYmplY3QoZSkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgRE9NLnVwZGF0ZURpc3BsYXkoKVxyXG4gICAgfVxyXG5cclxuICAgIC8vIGhhbmRsZSB0b2RvIGNsaWNrICh0b2dnbGluZyBjb21wbGV0ZSlcclxuICAgIGZ1bmN0aW9uIGhhbmRsZVRvZG9DbGljayhlKSB7XHJcbiAgICAgICAgdG9nZ2xlQ29tcGxldGUoZ2V0VG9kb0luZGV4KGUpKTtcclxuICAgICAgICBET00udXBkYXRlRGlzcGxheSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGhhbmRsZXMgdG9kbyBpbmZvIGJ1dHRvbiBjbGljayAoTUFLRSBXT1JLIEZPUiBBTlkgUFJPSkVDVClcclxuICAgIGZ1bmN0aW9uIGhhbmRsZVRvZG9JbmZvQ2xpY2soZSkge1xyXG4gICAgICAgIGluZGV4ID0gZ2V0VG9kb0luZGV4KGUpO1xyXG4gICAgICAgIERPTS5kaXNwbGF5TW9kYWwoZSwgTW9kYWxzLnRvZG9JbmZvTW9kYWwsIGluZGV4KVxyXG4gICAgfVxyXG5cclxuICAgIC8vIGhhbmRsZXMgZmlsdGVyIGNsaWNrXHJcbiAgICBmdW5jdGlvbiBoYW5kbGVGaWx0ZXJDbGljayhlKSB7XHJcbiAgICAgICAgc2VsZWN0ZWRGaWx0ZXIgPSBnZXRGaWx0ZXJPYmplY3QoZSk7XHJcblxyXG4gICAgICAgIC8vIHVuc2VsZWN0IGN1cnJlbnQgZmlsdGVyXHJcbiAgICAgICAgdW5zZWxlY3RQcm9qZWN0KClcclxuXHJcbiAgICAgICAgLy8gc2VsZWN0IG5ldyBmaWx0ZXJcclxuICAgICAgICBzZWxlY3RQcm9qZWN0KHNlbGVjdGVkRmlsdGVyKTtcclxuXHJcbiAgICAgICAgLy8gdXBkYXRlIGRpc3BsYXlzXHJcbiAgICAgICAgRE9NLnVwZGF0ZURpc3BsYXkoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBnZXQgb3BlbiBtb2RhbCByZWZlcmVuY2VcclxuICAgIGZ1bmN0aW9uIGdldE9wZW5Nb2RhbCgpIHtcclxuICAgICAgICBsZXQgb3Blbk1vZGFsID0gbnVsbDtcclxuXHJcbiAgICAgICAgLy8gbG9vcHMgdGhyb3VnaCBlYWNoIG1vZGFsIGNoZWNraW5nIHdoaWNoIG9uZSBpcyBvcGVuXHJcbiAgICAgICAgZm9yIChsZXQgbW9kYWxLZXkgaW4gTW9kYWxzKSB7XHJcblxyXG4gICAgICAgICAgICBpZiAoTW9kYWxzLmhhc093blByb3BlcnR5KG1vZGFsS2V5KSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBNb2RhbHNbbW9kYWxLZXldO1xyXG4gICAgICAgICAgICAgICAgaWYgKG1vZGFsLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9PT0gXCJibG9ja1wiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb3Blbk1vZGFsID0gbW9kYWw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBvcGVuTW9kYWw7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gaWYgdGhlcmUgYXJlIG5vIHNlbGVjdGVkIGZpbHRlcnMsIHNlbGVjdCAnYWxsJyBmaWx0ZXJcclxuICAgIGZ1bmN0aW9uIHNldERlZmF1bHRGaWx0ZXIoKSB7XHJcbiAgICAgICAgaWYgKCFnZXRTZWxlY3RlZEZpbHRlcigpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGFsbFRvZG9zRmlsdGVyID0gSW5mby5maWx0ZXJzLmZpbHRlcihmaWx0ZXIgPT4gZmlsdGVyLnRpdGxlID09PSBcIkFsbFwiKVswXTtcclxuICAgICAgICAgICAgYWxsVG9kb3NGaWx0ZXIuc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBkaXNwbGF5IG5ldyBwcm9qZWN0IG1vZGFsXHJcbiAgICBuZXdQcm9qZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgIERPTS5kaXNwbGF5TW9kYWwoZSwgTW9kYWxzLm5ld1Byb2plY3RNb2RhbCk7XHJcbiAgICB9KVxyXG5cclxuICAgIC8vIGRpc3BsYXkgbmV3IHRvZG8gbW9kYWxcclxuICAgIG5ld1RvZG9CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgICAgRE9NLmRpc3BsYXlNb2RhbChlLCBNb2RhbHMubmV3VG9kb01vZGFsKTtcclxuICAgIH0pXHJcblxyXG4gICAgLy8gY2xvc2UgbW9kYWxcclxuICAgIG1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbFwiKSkge1xyXG4gICAgICAgICAgICBET00uY2xvc2VNb2RhbChnZXRPcGVuTW9kYWwoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gY2FuY2VsIG1vZGFsIGJ1dHRvbnNcclxuICAgIGNhbmNlbE1vZGFsQnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7XHJcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIERPTS5jbG9zZU1vZGFsKGdldE9wZW5Nb2RhbCgpKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pXHJcblxyXG4gICAgLy8gdmFsaWRhdGUgZm9ybSBpZiB1c2VyIGNsaWNrcyB0aGUgY29uZmlybSBidXR0b24gT1IgaGl0cyBlbnRlciB3aGVuIHRoZSBtb2RhbCBpcyBvcGVuXHJcbiAgICBjb25maXJtTW9kYWxCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IHtcclxuXHJcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHZhbGlkYXRlRm9ybShnZXRPcGVuTW9kYWwoKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIgJiYgbW9kYWwuc3R5bGUuZGlzcGxheSA9PT0gXCJibG9ja1wiKSB7XHJcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZUZvcm0oZ2V0T3Blbk1vZGFsKCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIHsgaGFuZGxlRWRpdEJ1dHRvbkNsaWNrLCBoYW5kbGVEZWxldGVCdXR0b25DbGljaywgaGFuZGxlVG9kb0NsaWNrLCBoYW5kbGVUb2RvSW5mb0NsaWNrLCBoYW5kbGVGaWx0ZXJDbGljaywgc2V0RGVmYXVsdEZpbHRlciwgZ2V0U2VsZWN0ZWRGaWx0ZXIsIGdldEZpbHRlck9iamVjdCB9XHJcbn0pKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIYW5kbGVyOyIsImltcG9ydCBJbmZvIGZyb20gXCIuL0luZm8uanNcIjtcclxuaW1wb3J0IEhhbmRsZXIgZnJvbSBcIi4vSGFuZGxlci5qc1wiO1xyXG5pbXBvcnQgTW9kYWxzIGZyb20gXCIuL01vZGFscy5qc1wiO1xyXG5cclxuY29uc3QgRE9NID0gKCgpID0+IHtcclxuICAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbFwiKTtcclxuICAgIGNvbnN0IHByb2plY3RzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0c1wiKTtcclxuICAgIGNvbnN0IHRvZG9zQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b2Rvc1wiKTtcclxuICAgIGNvbnN0IGZpbHRlcnNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZpbHRlcnNcIik7XHJcblxyXG4gICAgLy8gZGlzcGxheSBjb3JyZXNwb25kaW5nIG1vZGFsIGJhc2VkIG9uIGJ1dHRvbiBjbGljayAoRE9FU05UIEFQUExZIFRPIEVWRVJZIFBST0pFQ1QpXHJcbiAgICBmdW5jdGlvbiBkaXNwbGF5TW9kYWwoZSwgbW9kYWxDbGlja2VkLCB0b2RvSW5kZXggPSBudWxsKSB7XHJcbiAgICAgICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjsgLy9tb2RhbCBnZW5lcmFsIGRpc3BsYXlcclxuXHJcbiAgICAgICAgLy8gbmV3IG1vZGFsc1xyXG4gICAgICAgIGlmIChtb2RhbENsaWNrZWQgPT09IE1vZGFscy5uZXdQcm9qZWN0TW9kYWwgfHwgbW9kYWxDbGlja2VkID09PSBNb2RhbHMubmV3VG9kb01vZGFsKSB7XHJcbiAgICAgICAgICAgIHNob3dNb2RhbChtb2RhbENsaWNrZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyB0b2RvLXJlbGF0ZWQgbW9kYWxzXHJcbiAgICAgICAgaWYgKG1vZGFsQ2xpY2tlZCA9PT0gTW9kYWxzLmVkaXRUb2RvTW9kYWwgfHwgbW9kYWxDbGlja2VkID09PSBNb2RhbHMudG9kb0luZm9Nb2RhbCkge1xyXG5cclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdCA9IEhhbmRsZXIuZ2V0U2VsZWN0ZWRGaWx0ZXIoKTtcclxuICAgICAgICAgICAgY29uc3QgdG9kbyA9IHByb2plY3QudG9kb3NbdG9kb0luZGV4XTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gdG9kby50aXRsZTtcclxuICAgICAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSB0b2RvLmRlc2NyaXB0aW9uO1xyXG4gICAgICAgICAgICBjb25zdCBkYXRlID0gdG9kby5kYXRlO1xyXG4gICAgICAgICAgICBjb25zdCBwcmlvcml0eSA9IHRvZG8ucHJpb3JpdHk7XHJcblxyXG4gICAgICAgICAgICAvLyBpZiB0b2RvIGluZm8gbW9kYWwgZ3JhYiBleHRyYSB2YWx1ZXNcclxuICAgICAgICAgICAgaWYgKG1vZGFsQ2xpY2tlZCA9PT0gTW9kYWxzLnRvZG9JbmZvTW9kYWwpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbXBsZXRlID0gdG9kby5jb21wbGV0ZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IHByb2plY3QudGl0bGU7XHJcblxyXG4gICAgICAgICAgICAgICAgc2hvd01vZGFsKG1vZGFsQ2xpY2tlZCwgdGl0bGUsIGRlc2NyaXB0aW9uLCBkYXRlLCBwcmlvcml0eSwgY29tcGxldGUsIHByb2plY3RUaXRsZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIGlmIGVkaXQgdG9kbyBtb2RhbFxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNob3dNb2RhbChtb2RhbENsaWNrZWQsIHRpdGxlLCBkZXNjcmlwdGlvbiwgZGF0ZSwgcHJpb3JpdHkpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICAvL2VkaXQgcHJvamVjdCBtb2RhbFxyXG4gICAgICAgIGlmIChtb2RhbENsaWNrZWQgPT09IE1vZGFscy5lZGl0UHJvamVjdE1vZGFsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gSGFuZGxlci5nZXRGaWx0ZXJPYmplY3QoZSkudGl0bGU7XHJcbiAgICAgICAgICAgIHNob3dNb2RhbChtb2RhbENsaWNrZWQsIHRpdGxlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2hvd01vZGFsKG1vZGFsLCB0aXRsZSA9IFwiXCIsIGRlc2NyaXB0aW9uID0gXCJcIiwgZGF0ZSA9IFwiXCIsIHByaW9yaXR5ID0gXCJcIiwgY29tcGxldGUgPSBcIlwiLCBwcm9qZWN0ID0gXCJcIikge1xyXG4gICAgICAgIG1vZGFsLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuXHJcbiAgICAgICAgLy8gbW9kaWZ5IHRleHRDb250ZW50IGlmIHRvZG8gaW5mbyBtb2RhbCBjbGlja2VkXHJcbiAgICAgICAgaWYgKG1vZGFsID09PSBNb2RhbHMudG9kb0luZm9Nb2RhbCkge1xyXG5cclxuICAgICAgICAgICAgLy8gY2FwdGlhbGl6ZSBwcmlvcml0eSBzdGF0dXMgdG8gYmUgZGlzcGxheWVkIHRvIHNjcmVlblxyXG4gICAgICAgICAgICBwcmlvcml0eSA9IHByaW9yaXR5LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcHJpb3JpdHkuc2xpY2UoMSk7XHJcblxyXG4gICAgICAgICAgICBtb2RhbC50aXRsZUZpZWxkLnRleHRDb250ZW50ID0gdGl0bGU7XHJcbiAgICAgICAgICAgIG1vZGFsLmRlc2NGaWVsZC50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgICAgICBtb2RhbC5kdWVEYXRlRmllbGQudGV4dENvbnRlbnQgPSBkYXRlO1xyXG4gICAgICAgICAgICBtb2RhbC5wcmlvcml0eUZpZWxkLnRleHRDb250ZW50ID0gcHJpb3JpdHk7XHJcbiAgICAgICAgICAgIG1vZGFsLmNvbXBsZXRlRmllbGQudGV4dENvbnRlbnQgPSAoY29tcGxldGUpID8gXCJZZXNcIiA6IFwiTm9cIjtcclxuICAgICAgICAgICAgbW9kYWwucHJvamVjdEZpZWxkLnRleHRDb250ZW50ID0gcHJvamVjdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIGlmIHRvZG8gaW5mbyBmaWVsZCB3YXNuJ3QgY2xpY2tlZFxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBtb2RhbC50aXRsZUZpZWxkLnZhbHVlID0gdGl0bGU7XHJcbiAgICAgICAgICAgIG1vZGFsLnRpdGxlRmllbGQuZm9jdXMoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIHNldCBhZGRpdGlvbmFsIGZpZWxkcyBmb3IgZWRpdCB0b2RvIG1vZGFsXHJcbiAgICAgICAgICAgIGlmIChtb2RhbCA9PT0gTW9kYWxzLmVkaXRUb2RvTW9kYWwpIHtcclxuICAgICAgICAgICAgICAgIG1vZGFsLmRlc2NGaWVsZC52YWx1ZSA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgICAgICAgICAgbW9kYWwuZHVlRGF0ZUZpZWxkLnZhbHVlID0gZGF0ZTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBvcHRpb24gPSBtb2RhbC5wcmlvcml0eUZpZWxkLnF1ZXJ5U2VsZWN0b3IoXCJvcHRpb25bdmFsdWU9XCIgKyBwcmlvcml0eSArIFwiXVwiKTtcclxuICAgICAgICAgICAgICAgIG9wdGlvbi5zZWxlY3RlZCA9IHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyByZXNldHMgaW5wdXQgZmllbGRzIC8gZXJyb3IgbWVzc2FnZXNcclxuICAgIGZ1bmN0aW9uIHJlc2V0TW9kYWxGaWVsZHMobW9kYWwpIHtcclxuICAgICAgICBtb2RhbC5lcnJvclRleHQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIG1vZGFsLnRpdGxlRmllbGQudmFsdWUgPSBcIlwiO1xyXG5cclxuICAgICAgICAvLyByZXNldCBhZGRpdGlvbmFsIGZpZWxkcyBmb3IgdG9kbyBtb2RhbHNcclxuICAgICAgICBpZiAobW9kYWwgPT09IE1vZGFscy5uZXdUb2RvTW9kYWwpIHtcclxuICAgICAgICAgICAgbW9kYWwuZGVzY0ZpZWxkLnZhbHVlID0gXCJcIjtcclxuICAgICAgICAgICAgbW9kYWwuZHVlRGF0ZUZpZWxkLnZhbHVlID0gXCJcIjtcclxuICAgICAgICAgICAgbW9kYWwucHJpb3JpdHlGaWVsZC5zZWxlY3RlZEluZGV4ID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY2xvc2VNb2RhbChtb2RhbFRvQ2xvc2UpIHtcclxuICAgICAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgbW9kYWxUb0Nsb3NlLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cclxuICAgICAgICBpZiAobW9kYWxUb0Nsb3NlICE9PSBNb2RhbHMudG9kb0luZm9Nb2RhbCkge1xyXG4gICAgICAgICAgICByZXNldE1vZGFsRmllbGRzKG1vZGFsVG9DbG9zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGRpc3BsYXlFcnJvcihtb2RhbCkge1xyXG4gICAgICAgIG1vZGFsLmVycm9yVGV4dC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNsZWFyUHJvamVjdHMoKSB7XHJcbiAgICAgICAgd2hpbGUgKHByb2plY3RzQ29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcclxuICAgICAgICAgICAgcHJvamVjdHNDb250YWluZXIucmVtb3ZlQ2hpbGQocHJvamVjdHNDb250YWluZXIuZmlyc3RDaGlsZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNsZWFyRmlsdGVycygpIHtcclxuICAgICAgICB3aGlsZSAoZmlsdGVyc0NvbnRhaW5lci5maXJzdENoaWxkKSB7XHJcbiAgICAgICAgICAgIGZpbHRlcnNDb250YWluZXIucmVtb3ZlQ2hpbGQoZmlsdGVyc0NvbnRhaW5lci5maXJzdENoaWxkKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZGlzcGxheUZpbHRlcnMoKSB7XHJcbiAgICAgICAgLy9jbGVhciBmaWx0ZXJzIGZyb20gZGlzcGxheVxyXG4gICAgICAgIGNsZWFyRmlsdGVycygpO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IEluZm8uZmlsdGVycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICAgICAgICBmaWx0ZXJDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInNpZGViYXItY29udGFpbmVyXCIpO1xyXG4gICAgICAgICAgICBmaWx0ZXJDb250YWluZXIuc2V0QXR0cmlidXRlKFwidGl0bGVcIiwgSW5mby5maWx0ZXJzW2ldLnRpdGxlKTtcclxuICAgICAgICAgICAgZmlsdGVyQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgSGFuZGxlci5oYW5kbGVGaWx0ZXJDbGljayhlKTtcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC8vIGlmIHRoaXMgZmlsdGVyIGlzIHNlbGVjdGVkLCBhZGQgdGhlIHNlbGVjdGVkIHN0eWxlXHJcbiAgICAgICAgICAgIGlmIChJbmZvLmZpbHRlcnNbaV0uc2VsZWN0ZWQpIHtcclxuICAgICAgICAgICAgICAgIGFkZFNlbGVjdGVkU3R5bGUoZmlsdGVyQ29udGFpbmVyKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29uc3QgZmlsdGVyVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgICAgICAgICAgZmlsdGVyVGl0bGUudGV4dENvbnRlbnQgPSBJbmZvLmZpbHRlcnNbaV0udGl0bGU7XHJcblxyXG4gICAgICAgICAgICBmaWx0ZXJDb250YWluZXIuYXBwZW5kQ2hpbGQoZmlsdGVyVGl0bGUpO1xyXG4gICAgICAgICAgICBmaWx0ZXJzQ29udGFpbmVyLmFwcGVuZENoaWxkKGZpbHRlckNvbnRhaW5lcik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGRpc3BsYXlQcm9qZWN0cygpIHtcclxuXHJcbiAgICAgICAgLy8gY2xlYXIgZXhpc3RpbmcgcHJvamVjdHMgZnJvbSBkaXNwbGF5XHJcbiAgICAgICAgY2xlYXJQcm9qZWN0cygpO1xyXG5cclxuICAgICAgICAvLyBhZGQgZWFjaCBwcm9qZWN0IHRvIHBhZ2VcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IEluZm8ucHJvamVjdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgICAgIHByb2plY3RDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInNpZGViYXItY29udGFpbmVyXCIpO1xyXG4gICAgICAgICAgICBwcm9qZWN0Q29udGFpbmVyLnNldEF0dHJpYnV0ZShcInRpdGxlXCIsIEluZm8ucHJvamVjdHNbaV0udGl0bGUpO1xyXG4gICAgICAgICAgICBwcm9qZWN0Q29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxyXG4gICAgICAgICAgICAgICAgSGFuZGxlci5oYW5kbGVGaWx0ZXJDbGljayhlKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyBpZiB0aGlzIHByb2plY3QgaXMgc2VsZWN0ZWQsIGFkZCB0aGUgc2VsZWN0ZWQgc3R5bGVcclxuICAgICAgICAgICAgaWYgKEluZm8ucHJvamVjdHNbaV0uc2VsZWN0ZWQpIHtcclxuICAgICAgICAgICAgICAgIGFkZFNlbGVjdGVkU3R5bGUocHJvamVjdENvbnRhaW5lcik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gICAgICAgICAgICBwcm9qZWN0VGl0bGUudGV4dENvbnRlbnQgPSBJbmZvLnByb2plY3RzW2ldLnRpdGxlO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgYWN0aW9uQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgICAgIGFjdGlvbkJ1dHRvbnMuY2xhc3NMaXN0LmFkZChcImFjdGlvbi1idXR0b25zXCIpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcbiAgICAgICAgICAgIGVkaXRCdXR0b24uc3JjID0gXCIuLi9zcmMvaW1hZ2VzL2ljb25zOC1lZGl0LTMwLnBuZ1wiO1xyXG4gICAgICAgICAgICBlZGl0QnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlZGl0LWJ1dHRvblwiKTtcclxuICAgICAgICAgICAgZWRpdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiZWRpdC1wcm9qZWN0LWJ1dHRvblwiKTtcclxuICAgICAgICAgICAgZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKClcclxuICAgICAgICAgICAgICAgIEhhbmRsZXIuaGFuZGxlRWRpdEJ1dHRvbkNsaWNrKGUsIFwicHJvamVjdFwiKVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIE9ubHkgYWRkIGEgZGVsZXRlIGJ1dHRvbiBpZiB0aGVyZSBpcyBtb3JlIHRoYW4gb25lIHByb2plY3QuIFdlIGFsd2F5cyB3YW50IGF0IGxlYXN0IG9uZSBwcm9qZWN0LlxyXG4gICAgICAgICAgICBpZiAoSW5mby5wcm9qZWN0cy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xyXG4gICAgICAgICAgICAgICAgZGVsZXRlQnV0dG9uLnNyYyA9IFwiLi4vc3JjL2ltYWdlcy9pY29uczgtZGVsZXRlLTI0LnBuZ1wiO1xyXG4gICAgICAgICAgICAgICAgZGVsZXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJkZWxldGUtYnV0dG9uXCIpO1xyXG4gICAgICAgICAgICAgICAgZGVsZXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJkZWxldGUtcHJvamVjdC1idXR0b25cIik7XHJcbiAgICAgICAgICAgICAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxyXG4gICAgICAgICAgICAgICAgICAgIEhhbmRsZXIuaGFuZGxlRGVsZXRlQnV0dG9uQ2xpY2soZSwgXCJwcm9qZWN0XCIpXHJcbiAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgICAgIC8vIGFkZCBlYWNoIGJ1dHRvbiB0byBhY3Rpb24gYnV0dG9ucyBkaXZcclxuICAgICAgICAgICAgICAgIGFjdGlvbkJ1dHRvbnMuYXBwZW5kKGVkaXRCdXR0b24sIGRlbGV0ZUJ1dHRvbik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhY3Rpb25CdXR0b25zLmFwcGVuZENoaWxkKGVkaXRCdXR0b24pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBhZGQgdGl0bGUgKyBidXR0b25zIHRvIHByb2plY3QgY29udGFpbmVyXHJcbiAgICAgICAgICAgIHByb2plY3RDb250YWluZXIuYXBwZW5kKHByb2plY3RUaXRsZSwgYWN0aW9uQnV0dG9ucyk7XHJcblxyXG4gICAgICAgICAgICAvLyBhZGQgcHJvamVjdCBjb250YWluZXIgdG8gcHJvamVjdHMgbGlzdCBcclxuICAgICAgICAgICAgcHJvamVjdHNDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdENvbnRhaW5lcik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIGNsZWFycyB0b2RvIGRpc3BsYXlcclxuICAgIGZ1bmN0aW9uIGNsZWFyVG9kb3MoKSB7XHJcbiAgICAgICAgd2hpbGUgKHRvZG9zQ29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcclxuICAgICAgICAgICAgdG9kb3NDb250YWluZXIucmVtb3ZlQ2hpbGQodG9kb3NDb250YWluZXIuZmlyc3RDaGlsZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIGRpc3BsYXkgYSBwcm9qZWN0J3MgdG9kb3MgKEZPUiBOT1cgSVRTIEpVU1QgQUxMIE9GIFRIRU0pXHJcbiAgICBmdW5jdGlvbiBkaXNwbGF5VG9kb3MoKSB7XHJcbiAgICAgICAgLy8gY2xlYXIgZXhpc2l0aW5nIGRpc3BsYXlcclxuICAgICAgICBjbGVhclRvZG9zKCk7XHJcblxyXG4gICAgICAgIC8vIGdldCBhbGwgdG9kb3MgZmlsdGVyXHJcbiAgICAgICAgY29uc3QgYWxsVG9kb3NGaWx0ZXIgPSBJbmZvLmZpbHRlcnMuZmlsdGVyKGZpbHRlciA9PiBmaWx0ZXIudGl0bGUgPT09IFwiQWxsXCIpWzBdO1xyXG4gICAgICAgIGNvbnN0IGFsbFRvZG9zID0gYWxsVG9kb3NGaWx0ZXIudG9kb3M7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsVG9kb3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgdG9kb0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgICAgIHRvZG9Db250YWluZXIuY2xhc3NMaXN0LmFkZChcImNvbnRlbnQtY29udGFpbmVyXCIpO1xyXG4gICAgICAgICAgICB0b2RvQ29udGFpbmVyLnNldEF0dHJpYnV0ZShcImluZGV4XCIsIGkpO1xyXG4gICAgICAgICAgICB0b2RvQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBIYW5kbGVyLmhhbmRsZVRvZG9DbGljayk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCB0b2RvSW5mbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgICAgIHRvZG9JbmZvLmNsYXNzTGlzdC5hZGQoXCJ0b2RvLWluZm9cIik7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBjaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoXCJjaGVja2JveFwiKVxyXG4gICAgICAgICAgICBjb25zdCB0b2RvVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgICAgICAgICAgdG9kb1RpdGxlLnRleHRDb250ZW50ID0gYWxsVG9kb3NbaV0udGl0bGU7XHJcbiAgICAgICAgICAgIGNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICAgICAgICBkdWVEYXRlLmNsYXNzTGlzdC5hZGQoXCJkYXRlXCIpO1xyXG4gICAgICAgICAgICBkdWVEYXRlLnRleHRDb250ZW50ID0gYWxsVG9kb3NbaV0uZGF0ZTtcclxuXHJcbiAgICAgICAgICAgIC8vIGFkZCBjaGVja2JveCBhbmQgdG9kbyB0aXRsZSBzdHlsZXMgdGhlbiBhZGQgdG8gaW5mb1xyXG4gICAgICAgICAgICBhZGRUb2RvU3R5bGVzKGFsbFRvZG9zW2ldLCBjaGVja2JveCwgdG9kb1RpdGxlKTtcclxuICAgICAgICAgICAgdG9kb0luZm8uYXBwZW5kKGNoZWNrYm94LCB0b2RvVGl0bGUsIGR1ZURhdGUpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgYWN0aW9uQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgICAgIGFjdGlvbkJ1dHRvbnMuY2xhc3NMaXN0LmFkZChcImFjdGlvbi1idXR0b25zXCIpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcbiAgICAgICAgICAgIGVkaXRCdXR0b24uc3JjID0gXCIuLi9zcmMvaW1hZ2VzL2ljb25zOC1lZGl0LTMwLnBuZ1wiO1xyXG4gICAgICAgICAgICBlZGl0QnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlZGl0LWJ1dHRvblwiKTtcclxuICAgICAgICAgICAgZWRpdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiZWRpdC10b2RvLWJ1dHRvblwiKTtcclxuICAgICAgICAgICAgZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7IC8vIHByZXZlbnRzIHRvZG8gZnJvbSBiZWluZyB0b2dnbGVkIGNvbXBsZXRlXHJcbiAgICAgICAgICAgICAgICBIYW5kbGVyLmhhbmRsZUVkaXRCdXR0b25DbGljayhlLCBcInRvZG9cIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgZGVsZXRlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgICAgICAgICAgZGVsZXRlQnV0dG9uLnNyYyA9IFwiLi4vc3JjL2ltYWdlcy9pY29uczgtZGVsZXRlLTI0LnBuZ1wiO1xyXG4gICAgICAgICAgICBkZWxldGVCdXR0b24uY2xhc3NMaXN0LmFkZChcImRlbGV0ZS1idXR0b25cIik7XHJcbiAgICAgICAgICAgIGRlbGV0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiZGVsZXRlLXRvZG8tYnV0dG9uXCIpO1xyXG4gICAgICAgICAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOyAvLyBwcmV2ZW50cyB0b2RvIGZyb20gYmVpbmcgdG9nZ2xlZCBjb21wbGV0ZVxyXG4gICAgICAgICAgICAgICAgSGFuZGxlci5oYW5kbGVEZWxldGVCdXR0b25DbGljayhlLCBcInRvZG9cIik7XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICBjb25zdCBpbmZvQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgICAgICAgICAgaW5mb0J1dHRvbi5zcmMgPSBcIi4uL3NyYy9pbWFnZXMvaWNvbnM4LWluZm8tMjQucG5nXCI7XHJcbiAgICAgICAgICAgIGluZm9CdXR0b24uY2xhc3NMaXN0LmFkZChcImluZm8tYnV0dG9uXCIpO1xyXG4gICAgICAgICAgICBpbmZvQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsgLy9wcmV2ZW50cyB0b2RvIGZyb20gYmVpbmcgdG9nZ2xlZCBjb21wbGV0ZVxyXG4gICAgICAgICAgICAgICAgSGFuZGxlci5oYW5kbGVUb2RvSW5mb0NsaWNrKGUpO1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLy8gYWRkIGVhY2ggYnV0dG9uIHRvIGFjdGlvbiBidXR0b25zIGRpdlxyXG4gICAgICAgICAgICBhY3Rpb25CdXR0b25zLmFwcGVuZChlZGl0QnV0dG9uLCBkZWxldGVCdXR0b24sIGluZm9CdXR0b24pO1xyXG5cclxuICAgICAgICAgICAgLy8gYWRkIHRvZG8gaW5mbyBhbmQgYWN0aW9uIGJ1dHRvbnMgdG8gZWFjaCBjb250YWluZXJcclxuICAgICAgICAgICAgdG9kb0NvbnRhaW5lci5hcHBlbmQodG9kb0luZm8sIGFjdGlvbkJ1dHRvbnMpO1xyXG5cclxuICAgICAgICAgICAgLy8gYWRkIGNvbnRhaW5lciB0byB0b2RvcyBkaXNwbGF5XHJcbiAgICAgICAgICAgIHRvZG9zQ29udGFpbmVyLmFwcGVuZENoaWxkKHRvZG9Db250YWluZXIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBhZGQgY29tcGxldGUvaW5jb21wbGV0ZSB0b2RvIHN0eWxlcyArIHByaW9yaXR5IGNvbG91ciBjb2RpbmdcclxuICAgIGZ1bmN0aW9uIGFkZFRvZG9TdHlsZXModG9kbywgY2hlY2tib3gsIHRvZG9UaXRsZSkge1xyXG4gICAgICAgIGlmICh0b2RvLmNvbXBsZXRlKSB7XHJcbiAgICAgICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoXCJjb21wbGV0ZVwiKTtcclxuICAgICAgICAgICAgdG9kb1RpdGxlLnN0eWxlLnRleHREZWNvcmF0aW9uID0gXCJsaW5lLXRocm91Z2hcIjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0b2RvLnByaW9yaXR5ID09PSBcImxvd1wiKSB7XHJcbiAgICAgICAgICAgIHRvZG9UaXRsZS5zdHlsZS5jb2xvciA9IFwiIzMyQ0QzMlwiO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRvZG8ucHJpb3JpdHkgPT09IFwibWVkaXVtXCIpIHtcclxuICAgICAgICAgICAgdG9kb1RpdGxlLnN0eWxlLmNvbG9yID0gXCIjREFBNTIwXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodG9kby5wcmlvcml0eSA9PT0gXCJoaWdoXCIpIHtcclxuICAgICAgICAgICAgdG9kb1RpdGxlLnN0eWxlLmNvbG9yID0gXCIjRkY2MzQ3XCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIHVwZGF0ZSBkaXNwbGF5XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVEaXNwbGF5KCkge1xyXG5cclxuICAgICAgICAvLyBpZiBubyBwcm9qZWN0L2ZpbHRlciBpcyBzZWxlY3RlZCwgc2VsZWN0ICdhbGwnIGZpbHRlclxyXG4gICAgICAgIEhhbmRsZXIuc2V0RGVmYXVsdEZpbHRlcigpO1xyXG5cclxuICAgICAgICBkaXNwbGF5RmlsdGVycygpO1xyXG4gICAgICAgIGRpc3BsYXlQcm9qZWN0cygpO1xyXG4gICAgICAgIGRpc3BsYXlUb2RvcygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHNlbGVjdCBmaWx0ZXIgYnkgYWRkaW5nIHRoZSBzZWxlY3RlZCBzdHlsZVxyXG4gICAgZnVuY3Rpb24gYWRkU2VsZWN0ZWRTdHlsZShjb250YWluZXIpIHtcclxuICAgICAgICAvLyBhZGQgc2VsZWN0ZWQgcHJvcGVydHkgdG8gbmV3IGVsZW1lbnRcclxuICAgICAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7IGRpc3BsYXlNb2RhbCwgY2xvc2VNb2RhbCwgZGlzcGxheUVycm9yLCB1cGRhdGVEaXNwbGF5IH07XHJcbn0pKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBET007IiwiaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcclxuaW1wb3J0IERPTSBmcm9tIFwiLi9ET00uanNcIjtcclxuXHJcbkRPTS51cGRhdGVEaXNwbGF5KCk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJuYyIsImxvY2FscyIsInByb2plY3RzIiwidGl0bGUiLCJ0b2RvcyIsImRlc2NyaXB0aW9uIiwiZGF0ZSIsInByaW9yaXR5IiwiY29tcGxldGUiLCJzZWxlY3RlZCIsImdldEFsbFRvZG9zIiwiYWxsVG9kb3MiLCJwcm9qZWN0IiwidG9kbyIsImZpbHRlcnMiLCJmaWx0ZXIiLCJnZXRBbGxGaWx0ZXJzIiwiY29uc29sZSIsImxvZyIsImFycmF5IiwiUHJvamVjdCIsImNvbnN0cnVjdG9yIiwiX3RpdGxlIiwidGkiLCJzZWxlY3QiLCJfc2VsZWN0ZWQiLCJhZGRUb2RvIiwicmVtb3ZlVG9kbyIsInBvcCIsIm5ld1Byb2plY3RNb2RhbCIsInRpdGxlRmllbGQiLCJlcnJvclRleHQiLCJlZGl0UHJvamVjdE1vZGFsIiwibmV3VG9kb01vZGFsIiwiZGVzY0ZpZWxkIiwiZHVlRGF0ZUZpZWxkIiwicHJpb3JpdHlGaWVsZCIsImVkaXRUb2RvTW9kYWwiLCJ0b2RvSW5mb01vZGFsIiwiY29tcGxldGVGaWVsZCIsInByb2plY3RGaWVsZCIsIlRvZG8iLCJfZGVzY3JpcHRpb24iLCJkZXNjIiwiX2RhdGUiLCJkdCIsIl9wcmlvcml0eSIsInByaSIsIl9jb21wbGV0ZSIsImNvbXAiLCJuZXdQcm9qZWN0QnV0dG9uIiwibW9kYWwiLCJjYW5jZWxNb2RhbEJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29uZmlybU1vZGFsQnV0dG9ucyIsIm5ld1RvZG9CdXR0b24iLCJzZWxlY3RlZEZpbHRlciIsImdldFRvZG9JbmRleCIsImNsb3Nlc3QiLCJnZXRBdHRyaWJ1dGUiLCJ2YWxpZGF0ZUZvcm0iLCJ2YWx1ZSIsImR1ZURhdGUiLCJhZGRQcm9qZWN0IiwiZWRpdFByb2plY3QiLCJnZXRTZWxlY3RlZEZpbHRlciIsImVkaXRUb2RvIiwiY2xvc2VNb2RhbCIsInVwZGF0ZURpc3BsYXkiLCJkaXNwbGF5RXJyb3IiLCJnZXRGaWx0ZXJPYmplY3QiLCJnZXRPcGVuTW9kYWwiLCJvcGVuTW9kYWwiLCJtb2RhbEtleSIsImRpc3BsYXkiLCJhZGRFdmVudExpc3RlbmVyIiwiZGlzcGxheU1vZGFsIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJmb3JFYWNoIiwiYnV0dG9uIiwiaGFuZGxlRWRpdEJ1dHRvbkNsaWNrIiwib2JqZWN0IiwiaGFuZGxlRGVsZXRlQnV0dG9uQ2xpY2siLCJkZWxldGVUb2RvIiwic2VsZWN0ZWRQcm9qZWN0IiwicHJvamVjdEluZGV4IiwiZmluZEluZGV4IiwiZGVsZXRlUHJvamVjdCIsImhhbmRsZVRvZG9DbGljayIsImdldFRvZG8iLCJ0b2dnbGVDb21wbGV0ZSIsImhhbmRsZVRvZG9JbmZvQ2xpY2siLCJoYW5kbGVGaWx0ZXJDbGljayIsInNldERlZmF1bHRGaWx0ZXIiLCJwcm9qZWN0c0NvbnRhaW5lciIsInRvZG9zQ29udGFpbmVyIiwiZmlsdGVyc0NvbnRhaW5lciIsInNob3dNb2RhbCIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwidGV4dENvbnRlbnQiLCJmb2N1cyIsImFkZFRvZG9TdHlsZXMiLCJjaGVja2JveCIsInRvZG9UaXRsZSIsImFkZCIsInRleHREZWNvcmF0aW9uIiwiY29sb3IiLCJhZGRTZWxlY3RlZFN0eWxlIiwiY29udGFpbmVyIiwibW9kYWxDbGlja2VkIiwidG9kb0luZGV4IiwibW9kYWxUb0Nsb3NlIiwic2VsZWN0ZWRJbmRleCIsInJlc2V0TW9kYWxGaWVsZHMiLCJjbGVhckZpbHRlcnMiLCJmaWx0ZXJDb250YWluZXIiLCJmaWx0ZXJUaXRsZSIsImRpc3BsYXlGaWx0ZXJzIiwiY2xlYXJQcm9qZWN0cyIsInByb2plY3RDb250YWluZXIiLCJzdG9wUHJvcGFnYXRpb24iLCJwcm9qZWN0VGl0bGUiLCJhY3Rpb25CdXR0b25zIiwiZWRpdEJ1dHRvbiIsImRlbGV0ZUJ1dHRvbiIsImFwcGVuZCIsImRpc3BsYXlQcm9qZWN0cyIsImNsZWFyVG9kb3MiLCJ0b2RvQ29udGFpbmVyIiwidG9kb0luZm8iLCJpbmZvQnV0dG9uIiwiZGlzcGxheVRvZG9zIl0sInNvdXJjZVJvb3QiOiIifQ==