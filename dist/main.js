(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),d=t.n(i),l=t(667),a=t.n(l),c=new URL(t(718),t.b),s=d()(r()),A=a()(c);s.push([e.id,`* {\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n    font-weight: 500;\n}\n\nbody {\n    margin: 0;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: auto 1fr;\n    min-height: 100vh;\n}\n\n/* HEADER */\n.header {\n    background: #1F9EFF;\n    font-size: 3rem;\n    grid-column: span 2;\n    grid-row: 1 / 2;\n    color: white;\n    padding: 1rem 5rem;\n}\n\n/* SIDEBAR */\n\n.sidebar {\n    background: #ADDCFF;\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    color: gray;\n    font-size: 1.5rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    min-width: 200px;\n}\n\n.sidebar span {\n    align-self: center;\n}\n\n.filters,\n.projects {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.sidebar-container {\n    background: white;\n    padding: 0.75rem;\n    border-radius: 8px;\n    border: 1px solid white;\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    overflow: hidden;\n}\n\n.sidebar-container:hover {\n    border: 1px solid gray;\n    cursor: pointer;\n}\n\n.selected {\n    background: #ffdeb3;\n    border: 1px solid #ffdeb3;\n}\n\n.projects-title,\n.todos-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n    gap: 0.5rem;\n}\n\n/* CONTENT */\n\n.content {\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    margin: 0 25%;\n    color: gray;\n    min-width: 300px;\n}\n\n.todo-info {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    overflow: hidden;\n    flex: 1;\n}\n\n.todo-info span,\n.sidebar-container span {\n    display: inline-block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.checkbox {\n    min-width: 1rem;\n    min-height: 1rem;\n    border-radius: 5px;\n    border: 2px solid gray;\n    background: white;\n}\n\n.complete {\n    background: url(${A}) no-repeat center;\n    background-size: fill;\n}\n\n.todos-title {\n    font-size: 2.5rem;\n    border-bottom: 2px solid #EBF6FF;\n}\n\n.content-container {\n    font-size: 1.1rem;\n    padding: 1rem;\n    border-bottom: 2px solid #EBF6FF;\n    display: flex;\n    justify-content: space-between;\n    gap: 0.5rem;\n    align-items: center;\n\n}\n\n.content-container:hover {\n    background: #EBF6FF;\n    cursor: pointer;\n}\n\n.date {\n    font-size: 0.75rem;\n    margin-left: auto;\n    white-space: nowrap;\n}\n\n/* BUTTONS */\n\nimg:hover {\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\n    cursor: pointer;\n}\n\n.action-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 0.5rem;\n}\n\n.add-button,\n.edit-button,\n.delete-button,\n.info-button {\n    height: 1.5rem;\n}\n\n/* MODAL */\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    /* Semi-transparent black background */\n}\n\n.modal-container {\n    background-color: white;\n    margin: 10% auto;\n    border: 1px solid gray;\n    width: max(320px, 30%);\n    display: flex;\n    flex-direction: column;\n}\n\n.modal-title {\n    grid-row: 1 / 2;\n    background: #1F9EFF;\n    font-size: 2rem;\n    color: white;\n    padding: 1rem 1.5rem;\n}\n\n.modal-content {\n    grid-row: 2 / 3;\n    padding: 1rem 1.5rem;\n    font-size: 1.3rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\n\n#new-project-modal,\n#edit-project-modal,\n#new-todo-modal, #edit-todo-modal, #todo-info-modal {\n    display: none;\n}\n\n\n\n#todo-info-modal .attribute-container {\n    border-bottom: 2px solid #EBF6FF;\n    padding-bottom: 1rem;\n    display: flex;\n    align-items: center;\n}\n\n.attribute-container .attribute {\n    width: 150px;\n}\n\n.attribute-container .value {\n    color: gray;\n    font-size: 1rem;\n    flex: 1;\n}\n\n.attribute-container .todo-description {\n    height: 100px;\n    overflow-y: scroll;\n}\n\n/* FORM STYLES */\n\ninput,\nselect {\n    border: 2px solid gray;\n    outline: none;\n    border-radius: 5px;\n    height: 2rem;\n    font-size: 1rem;\n    padding-left: 0.5rem;\n}\n\n.modal-content .action-buttons {\n    justify-content: flex-end;\n    gap: 1rem;\n}\n\n.required {\n    color: red;\n}\n\n.error-text {\n    display: none;\n    color: red;\n    font-size: 0.8rem;\n}\n\nbutton {\n    background: #1F9EFF;\n    color: white;\n    padding: 0.75rem;\n    border: none;\n    border-radius: 5px;\n    font-size: 1.3rem;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background: #1b87da;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['* {\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n    font-weight: 500;\n}\n\nbody {\n    margin: 0;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: auto 1fr;\n    min-height: 100vh;\n}\n\n/* HEADER */\n.header {\n    background: #1F9EFF;\n    font-size: 3rem;\n    grid-column: span 2;\n    grid-row: 1 / 2;\n    color: white;\n    padding: 1rem 5rem;\n}\n\n/* SIDEBAR */\n\n.sidebar {\n    background: #ADDCFF;\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    color: gray;\n    font-size: 1.5rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    min-width: 200px;\n}\n\n.sidebar span {\n    align-self: center;\n}\n\n.filters,\n.projects {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.sidebar-container {\n    background: white;\n    padding: 0.75rem;\n    border-radius: 8px;\n    border: 1px solid white;\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    overflow: hidden;\n}\n\n.sidebar-container:hover {\n    border: 1px solid gray;\n    cursor: pointer;\n}\n\n.selected {\n    background: #ffdeb3;\n    border: 1px solid #ffdeb3;\n}\n\n.projects-title,\n.todos-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n    gap: 0.5rem;\n}\n\n/* CONTENT */\n\n.content {\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    margin: 0 25%;\n    color: gray;\n    min-width: 300px;\n}\n\n.todo-info {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    overflow: hidden;\n    flex: 1;\n}\n\n.todo-info span,\n.sidebar-container span {\n    display: inline-block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.checkbox {\n    min-width: 1rem;\n    min-height: 1rem;\n    border-radius: 5px;\n    border: 2px solid gray;\n    background: white;\n}\n\n.complete {\n    background: url(./images/icons8-check-30.png) no-repeat center;\n    background-size: fill;\n}\n\n.todos-title {\n    font-size: 2.5rem;\n    border-bottom: 2px solid #EBF6FF;\n}\n\n.content-container {\n    font-size: 1.1rem;\n    padding: 1rem;\n    border-bottom: 2px solid #EBF6FF;\n    display: flex;\n    justify-content: space-between;\n    gap: 0.5rem;\n    align-items: center;\n\n}\n\n.content-container:hover {\n    background: #EBF6FF;\n    cursor: pointer;\n}\n\n.date {\n    font-size: 0.75rem;\n    margin-left: auto;\n    white-space: nowrap;\n}\n\n/* BUTTONS */\n\nimg:hover {\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\n    cursor: pointer;\n}\n\n.action-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 0.5rem;\n}\n\n.add-button,\n.edit-button,\n.delete-button,\n.info-button {\n    height: 1.5rem;\n}\n\n/* MODAL */\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    /* Semi-transparent black background */\n}\n\n.modal-container {\n    background-color: white;\n    margin: 10% auto;\n    border: 1px solid gray;\n    width: max(320px, 30%);\n    display: flex;\n    flex-direction: column;\n}\n\n.modal-title {\n    grid-row: 1 / 2;\n    background: #1F9EFF;\n    font-size: 2rem;\n    color: white;\n    padding: 1rem 1.5rem;\n}\n\n.modal-content {\n    grid-row: 2 / 3;\n    padding: 1rem 1.5rem;\n    font-size: 1.3rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\n\n#new-project-modal,\n#edit-project-modal,\n#new-todo-modal, #edit-todo-modal, #todo-info-modal {\n    display: none;\n}\n\n\n\n#todo-info-modal .attribute-container {\n    border-bottom: 2px solid #EBF6FF;\n    padding-bottom: 1rem;\n    display: flex;\n    align-items: center;\n}\n\n.attribute-container .attribute {\n    width: 150px;\n}\n\n.attribute-container .value {\n    color: gray;\n    font-size: 1rem;\n    flex: 1;\n}\n\n.attribute-container .todo-description {\n    height: 100px;\n    overflow-y: scroll;\n}\n\n/* FORM STYLES */\n\ninput,\nselect {\n    border: 2px solid gray;\n    outline: none;\n    border-radius: 5px;\n    height: 2rem;\n    font-size: 1rem;\n    padding-left: 0.5rem;\n}\n\n.modal-content .action-buttons {\n    justify-content: flex-end;\n    gap: 1rem;\n}\n\n.required {\n    color: red;\n}\n\n.error-text {\n    display: none;\n    color: red;\n    font-size: 0.8rem;\n}\n\nbutton {\n    background: #1F9EFF;\n    color: white;\n    padding: 0.75rem;\n    border: none;\n    border-radius: 5px;\n    font-size: 1.3rem;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background: #1b87da;\n}'],sourceRoot:""}]);const p=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var l=0;l<this.length;l++){var a=this[l][0];null!=a&&(d[a]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);o&&d[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},d=[],l=0;l<e.length;l++){var a=e[l],c=o.base?a[0]+o.base:a[0],s=i[c]||0,A="".concat(c," ").concat(s);i[c]=s+1;var p=t(A),u={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=l,n.splice(l,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var l=t(i[d]);n[l].references--}for(var a=o(e,r),c=0;c<i.length;c++){var s=t(i[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=a}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},718:(e,n,t)=>{e.exports=t.p+"1f83024f4bb8dc3ad757.png"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!e;)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),d=t.n(i),l=t(565),a=t.n(l),c=t(216),s=t.n(c),A=t(589),p=t.n(A),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=a(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=s(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=(()=>{let e=[{title:"First Project",todos:[{title:"Walk my dog",description:"I need to walk my dog today.",date:"2023-07-16",priority:"high",complete:!1}],selected:!1}];const n=()=>{let n=[];for(let t of e)for(let e of t.todos)n.push(e);return n},t=()=>n().filter((e=>"high"===e.priority)),o=()=>n().filter((e=>e.complete));let r=[{title:"All",todos:n(),selected:!0},{title:"Important",todos:t(),selected:!1},{title:"Completed",todos:o(),selected:!1}];return{projects:e,filters:r,getAllFilters:()=>{(()=>{const e=r.find((e=>"All"===e.title)),i=r.find((e=>"Important"===e.title)),d=r.find((e=>"Completed"===e.title));e.todos=n(),i.todos=t(),d.todos=o()})();let i=[];for(let e of r)i.push(e);for(let n of e)i.push(n);return i}}})();class g{constructor(e){this.title=e,this.todos=[],this.selected=!1}get title(){return this._title}set title(e){this._title=e}set selected(e){this._selected=e}get selected(){return this._selected}addTodo(e){this.todos.push(e)}removeTodo(e){this.todos.pop(e)}}const C={newProjectModal:{element:document.querySelector("#new-project-modal"),titleField:document.querySelector("#new-project-modal .project-title"),emptyErrorText:document.querySelector("#new-project-modal .empty"),takenErrorText:document.querySelector("#new-project-modal .taken")},editProjectModal:{element:document.querySelector("#edit-project-modal"),titleField:document.querySelector("#edit-project-modal .project-title"),emptyErrorText:document.querySelector("#edit-project-modal .empty"),takenErrorText:document.querySelector("#edit-project-modal .taken")},newTodoModal:{element:document.querySelector("#new-todo-modal"),titleField:document.querySelector("#new-todo-modal .todo-title"),descField:document.querySelector("#new-todo-modal .todo-description"),dueDateField:document.querySelector("#new-todo-modal .todo-date"),priorityField:document.querySelector("#new-todo-modal .todo-priority"),emptyErrorText:document.querySelector("#new-todo-modal .empty")},editTodoModal:{element:document.querySelector("#edit-todo-modal"),titleField:document.querySelector("#edit-todo-modal .todo-title"),descField:document.querySelector("#edit-todo-modal .todo-description"),dueDateField:document.querySelector("#edit-todo-modal .todo-date"),priorityField:document.querySelector("#edit-todo-modal .todo-priority"),emptyErrorText:document.querySelector("#edit-todo-modal .empty")},todoInfoModal:{element:document.querySelector("#todo-info-modal"),titleField:document.querySelector("#todo-info-modal .todo-title"),descField:document.querySelector("#todo-info-modal .todo-description"),dueDateField:document.querySelector("#todo-info-modal .todo-date"),priorityField:document.querySelector("#todo-info-modal .todo-priority"),completeField:document.querySelector("#todo-info-modal .todo-complete"),projectField:document.querySelector("#todo-info-modal .todo-project")}};class B{constructor(e,n,t,o){this.title=e,this.description=n,this.date=t,this.priority=o,this.complete=!1}get title(){return this._title}set title(e){this._title=e}get description(){return this._description}set description(e){this._description=e}get date(){return this._date}set date(e){this._date=e}get priority(){return this._priority}set priority(e){this._priority=e}get complete(){return this._complete}set complete(e){this._complete=e}}const y=(()=>{const e=document.querySelector(".new-project-button"),n=document.querySelector(".modal"),t=document.querySelectorAll(".cancel-button"),o=document.querySelectorAll(".confirm-button");let r,i;function d(e){return e.target.closest(".content-container").getAttribute("index")}function l(e){const n=e.titleField.value;let t,o,d;e!==C.newTodoModal&&e!==C.editTodoModal||(t=e.descField.value,o=e.dueDateField.value,d=e.priorityField.value),""!==n?e!==C.newProjectModal&&e!==C.editProjectModal||!function(e){return f.getAllFilters().find((n=>n.title===e))}(n)?(e===C.newProjectModal?function(e){const n=new g(e);f.projects.push(n)}(n):e===C.editProjectModal?function(e,n){e.title=n}(i,n):e===C.newTodoModal?function(e,n,t,o){const r=new B(e,n,t,o);c().todos.push(r)}(n,t,o,d):e===C.editTodoModal&&function(e,n,t,o,r){e.title=n,e.description=t,e.date=o,e.priority=r}(c().todos[r],n,t,o,d),b.closeModal(e),b.updateDisplay()):b.displayTakenError(e):b.displayEmptyError(e)}function a(e){const n=e.target.closest(".sidebar-container").getAttribute("title");return f.getAllFilters().find((e=>e.title===n))}function c(){return f.getAllFilters().find((e=>e.selected))}function s(){let e=null;for(let n in C)if(C.hasOwnProperty(n)){const t=C[n];"block"===t.element.style.display&&(e=t)}return e}return e.addEventListener("click",(e=>{b.displayModal(e,C.newProjectModal)})),n.addEventListener("click",(e=>{e.target.classList.contains("modal")&&b.closeModal(s())})),t.forEach((e=>{e.addEventListener("click",(()=>{b.closeModal(s())}))})),o.forEach((e=>{e.addEventListener("click",(()=>{l(s())})),document.addEventListener("keydown",(e=>{"Enter"===e.key&&"block"===n.style.display&&l(s())}))})),{handleEditButtonClick:function(e,n){"todo"===n&&(r=d(e),b.displayModal(e,C.editTodoModal,r)),"project"===n&&(i=a(e),b.displayModal(e,C.editProjectModal))},handleDeleteButtonClick:function(e,n){"todo"===n&&(r=d(e),function(e){c().todos.splice(e,1)}(r)),"project"===n&&function(e){const n=f.projects.findIndex((n=>n===e));f.projects.splice(n,1)}(a(e)),b.updateDisplay()},handleTodoClick:function(e){(function(e){const n=function(e){return c().todos[e]}(e);n.complete=!n.complete})(d(e)),b.updateDisplay()},handleTodoInfoClick:function(e){r=d(e),b.displayModal(e,C.todoInfoModal,r)},handleFilterClick:function(e){i=a(e),c()&&(c().selected=!1),i.selected=!0,b.updateDisplay()},HandleNewTodoClick:function(e){b.displayModal(e,C.newTodoModal)},setDefaultFilter:function(){c()||(f.filters.find((e=>"All"===e.title)).selected=!0)},getSelectedFilter:c,getFilterObject:a}})(),b=(()=>{const e=document.querySelector(".modal"),n=document.querySelector(".projects"),t=document.querySelector(".todos"),o=document.querySelector(".filters"),r=document.querySelector(".todos-title"),i=r.querySelector("span");function d(e,n="",t="",o="",r="",i="",d=""){e.element.style.display="block",e===C.todoInfoModal?(r=r.charAt(0).toUpperCase()+r.slice(1),e.titleField.textContent=n,e.descField.textContent=t,e.dueDateField.textContent=o,e.priorityField.textContent=r,e.completeField.textContent=i?"Yes":"No",e.projectField.textContent=d):(e.titleField.value=n,e.titleField.focus(),e===C.editTodoModal&&(e.descField.value=t,e.dueDateField.value=o,e.priorityField.querySelector("option[value="+r+"]").selected=!0))}function l(e,n,t){e.complete&&(n.classList.add("complete"),t.style.textDecoration="line-through"),"low"===e.priority&&(t.style.color="#32CD32"),"medium"===e.priority&&(t.style.color="#DAA520"),"high"===e.priority&&(t.style.color="#FF6347")}function a(e){e.classList.add("selected")}return{displayModal:function(n,t,o=null){if(e.style.display="block",t!==C.newProjectModal&&t!==C.newTodoModal||d(t),t===C.editTodoModal||t===C.todoInfoModal){const e=y.getSelectedFilter(),n=e.todos[o],r=n.title,i=n.description,l=n.date,a=n.priority;t===C.todoInfoModal?d(t,r,i,l,a,n.complete,e.title):d(t,r,i,l,a)}t===C.editProjectModal&&d(t,y.getFilterObject(n).title)},closeModal:function(n){e.style.display="none",n.element.style.display="none",n!==C.todoInfoModal&&function(e){e.emptyErrorText.style.display="none",e.titleField.value="",e!==C.newProjectModal&&e!==C.editProjectModal||(e.takenErrorText.style.display="none"),e===C.newTodoModal&&(e.descField.value="",e.dueDateField.value="",e.priorityField.selectedIndex=0)}(n)},displayEmptyError:function(e){!function(e){e.takenErrorText.style.display="none"}(e),e.emptyErrorText.style.display="block"},displayTakenError:function(e){!function(e){e.emptyErrorText.style.display="none"}(e),e.takenErrorText.style.display="block"},updateDisplay:function(){console.log(f.projects),y.setDefaultFilter(),r.childElementCount>1&&r.removeChild(r.lastChild),function(){for(;o.firstChild;)o.removeChild(o.firstChild)}(),function(){for(;n.firstChild;)n.removeChild(n.firstChild)}(),function(){for(;t.firstChild;)t.removeChild(t.firstChild)}(),i.textContent=y.getSelectedFilter().title,f.projects.includes(y.getSelectedFilter())&&function(){const e=document.createElement("img");e.src="../src/images/icons8-add-32.png",e.classList.add("add-button"),e.classList.add("new-todo-button"),e.addEventListener("click",(e=>{y.HandleNewTodoClick(e)})),r.appendChild(e)}(),function(){for(let e=0;e<f.filters.length;e++){const n=document.createElement("div");n.classList.add("sidebar-container"),n.setAttribute("title",f.filters[e].title),n.addEventListener("click",(e=>{y.handleFilterClick(e)})),f.filters[e].selected&&a(n);const t=document.createElement("span");t.textContent=f.filters[e].title,n.appendChild(t),o.appendChild(n)}}(),function(){for(let e=0;e<f.projects.length;e++){const t=document.createElement("div");t.classList.add("sidebar-container"),t.setAttribute("title",f.projects[e].title),t.addEventListener("click",(e=>{e.stopPropagation(),y.handleFilterClick(e)})),f.projects[e].selected&&a(t);const o=document.createElement("span");o.textContent=f.projects[e].title;const r=document.createElement("div");r.classList.add("action-buttons");const i=document.createElement("img");if(i.src="../src/images/icons8-edit-30.png",i.classList.add("edit-button"),i.classList.add("edit-project-button"),i.addEventListener("click",(e=>{e.stopPropagation(),y.handleEditButtonClick(e,"project")})),f.projects.length>1){const e=document.createElement("img");e.src="../src/images/icons8-delete-24.png",e.classList.add("delete-button"),e.classList.add("delete-project-button"),e.addEventListener("click",(e=>{e.stopPropagation(),y.handleDeleteButtonClick(e,"project")})),r.append(i,e)}else r.appendChild(i);t.append(o,r),n.appendChild(t)}}(),function(){const e=y.getSelectedFilter().todos;for(let n=0;n<e.length;n++){const o=document.createElement("div");o.classList.add("content-container"),o.setAttribute("index",n),o.addEventListener("click",y.handleTodoClick);const r=document.createElement("div");r.classList.add("todo-info");const i=document.createElement("div");i.classList.add("checkbox");const d=document.createElement("span");d.textContent=e[n].title;const a=document.createElement("div");a.classList.add("date"),a.textContent=e[n].date,l(e[n],i,d),r.append(i,d,a);const c=document.createElement("div");c.classList.add("action-buttons");const s=document.createElement("img");s.src="../src/images/icons8-edit-30.png",s.classList.add("edit-button"),s.classList.add("edit-todo-button"),s.addEventListener("click",(e=>{e.stopPropagation(),y.handleEditButtonClick(e,"todo")}));const A=document.createElement("img");A.src="../src/images/icons8-delete-24.png",A.classList.add("delete-button"),A.classList.add("delete-todo-button"),A.addEventListener("click",(e=>{e.stopPropagation(),y.handleDeleteButtonClick(e,"todo")}));const p=document.createElement("img");p.src="../src/images/icons8-info-24.png",p.classList.add("info-button"),p.addEventListener("click",(e=>{e.stopPropagation(),y.handleTodoInfoClick(e)})),c.append(s,A,p),o.append(r,c),t.appendChild(o)}}()}}})();b.updateDisplay()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,