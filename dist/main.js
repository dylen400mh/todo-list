(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),d=t(667),c=t.n(d),A=new URL(t(718),t.b),s=a()(o()),l=c()(A);s.push([n.id,`* {\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n    font-weight: 500;\n}\n\nbody {\n    margin: 0;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: auto 1fr;\n    min-height: 100vh;\n}\n\n/* HEADER */\n.header {\n    background: #1F9EFF;\n    font-size: 3rem;\n    grid-column: span 2;\n    grid-row: 1 / 2;\n    color: white;\n    padding: 1rem 5rem;\n}\n\n/* SIDEBAR */\n\n.sidebar {\n    background: #ADDCFF;\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    color: gray;\n    font-size: 1.5rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    min-width: 200px;\n}\n\n.sidebar span {\n    align-self: center;\n}\n\n.filters,\n.projects {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.sidebar-container {\n    background: white;\n    padding: 0.75rem;\n    border-radius: 8px;\n    border: 1px solid white;\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    overflow: hidden;\n}\n\n.sidebar-container:hover {\n    border: 1px solid gray;\n    cursor: pointer;\n}\n\n.projects-title,\n.todos-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n    gap: 0.5rem;\n}\n\n/* CONTENT */\n\n.content {\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    margin: 0 25%;\n    color: gray;\n    min-width: 300px;\n}\n\n.todo-info {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    overflow: hidden;\n}\n\n.todo-info span, .sidebar-container span {\n    display: inline-block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.checkbox {\n    min-width: 1rem;\n    min-height: 1rem;\n    border-radius: 5px;\n    border: 2px solid gray;\n    background: white;\n}\n\n.complete {\n    background: url(${l}) no-repeat center;\n    background-size: fill;\n}\n\n.todos-title {\n    font-size: 2.5rem;\n    border-bottom: 2px solid #EBF6FF;\n}\n\n.content-container {\n    font-size: 1.1rem;\n    padding: 1rem;\n    border-bottom: 2px solid #EBF6FF;\n    display: flex;\n    justify-content: space-between;\n    gap: 0.5rem;\n    align-items: center;\n    \n}\n\n.content-container:hover {\n    background: #EBF6FF;\n    cursor: pointer;\n}\n\n/* BUTTONS */\n\nimg:hover {\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\n    cursor: pointer;\n}\n\n.action-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 0.5rem;\n}\n\n.add-button,\n.edit-button,\n.delete-button,\n.info-button {\n    height: 1.5rem;\n}\n\n/* MODAL */\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    /* Semi-transparent black background */\n}\n\n.modal-container {\n    background-color: white;\n    margin: 10% auto;\n    border: 1px solid gray;\n    width: max(320px, 30%);\n    display: flex;\n    flex-direction: column;\n}\n\n.modal-title {\n    grid-row: 1 / 2;\n    background: #1F9EFF;\n    font-size: 2rem;\n    color: white;\n    padding: 1rem 1.5rem;\n}\n\n.modal-content {\n    grid-row: 2 / 3;\n    padding: 1rem 1.5rem;\n    font-size: 1.3rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\n\n#new-project-modal,\n#edit-project-modal,\n#new-todo-modal {\n    display: none;\n}\n\n/* FORM STYLES */\n\ninput,\nselect {\n    border: 2px solid gray;\n    outline: none;\n    border-radius: 5px;\n    height: 2rem;\n    font-size: 1rem;\n    padding-left: 0.5rem;\n}\n\n.modal-content .action-buttons {\n    justify-content: flex-end;\n    gap: 1rem;\n}\n\n.required {\n    color: red;\n}\n\n.error-text {\n    display: none;\n    color: red;\n    font-size: 0.8rem;\n}\n\nbutton {\n    background: #1F9EFF;\n    color: white;\n    padding: 0.75rem;\n    border: none;\n    border-radius: 5px;\n    font-size: 1.3rem;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background: #1b87da;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI;4DACwD;IACxD,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,aAAa;IACb,8BAA8B;IAC9B,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA,WAAW;AACX;IACI,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,YAAY;IACZ,kBAAkB;AACtB;;AAEA,YAAY;;AAEZ;IACI,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;IACf,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,eAAe;AACnB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,eAAe;IACf,WAAW;AACf;;AAEA,YAAY;;AAEZ;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;IACb,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,sBAAsB;IACtB,iBAAiB;AACrB;;AAEA;IACI,oEAA8D;IAC9D,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,gCAAgC;AACpC;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,gCAAgC;IAChC,aAAa;IACb,8BAA8B;IAC9B,WAAW;IACX,mBAAmB;;AAEvB;;AAEA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA,YAAY;;AAEZ;IACI,uDAAuD;IACvD,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,WAAW;AACf;;AAEA;;;;IAII,cAAc;AAClB;;AAEA,UAAU;;AAEV;IACI,aAAa;IACb,eAAe;IACf,UAAU;IACV,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;IACd,oCAAoC;IACpC,sCAAsC;AAC1C;;AAEA;IACI,uBAAuB;IACvB,gBAAgB;IAChB,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,uCAAuC;;AAEvC;;;IAGI,aAAa;AACjB;;AAEA,gBAAgB;;AAEhB;;IAEI,sBAAsB;IACtB,aAAa;IACb,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:['* {\r\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\r\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n    font-weight: 500;\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    grid-template-rows: auto 1fr;\r\n    min-height: 100vh;\r\n}\r\n\r\n/* HEADER */\r\n.header {\r\n    background: #1F9EFF;\r\n    font-size: 3rem;\r\n    grid-column: span 2;\r\n    grid-row: 1 / 2;\r\n    color: white;\r\n    padding: 1rem 5rem;\r\n}\r\n\r\n/* SIDEBAR */\r\n\r\n.sidebar {\r\n    background: #ADDCFF;\r\n    grid-column: 1 / 2;\r\n    grid-row: 2 / 3;\r\n    color: gray;\r\n    font-size: 1.5rem;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    min-width: 200px;\r\n}\r\n\r\n.sidebar span {\r\n    align-self: center;\r\n}\r\n\r\n.filters,\r\n.projects {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n}\r\n\r\n.sidebar-container {\r\n    background: white;\r\n    padding: 0.75rem;\r\n    border-radius: 8px;\r\n    border: 1px solid white;\r\n    font-size: 1.2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow: hidden;\r\n}\r\n\r\n.sidebar-container:hover {\r\n    border: 1px solid gray;\r\n    cursor: pointer;\r\n}\r\n\r\n.projects-title,\r\n.todos-title {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 1rem;\r\n    gap: 0.5rem;\r\n}\r\n\r\n/* CONTENT */\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    margin: 0 25%;\r\n    color: gray;\r\n    min-width: 300px;\r\n}\r\n\r\n.todo-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    overflow: hidden;\r\n}\r\n\r\n.todo-info span, .sidebar-container span {\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.checkbox {\r\n    min-width: 1rem;\r\n    min-height: 1rem;\r\n    border-radius: 5px;\r\n    border: 2px solid gray;\r\n    background: white;\r\n}\r\n\r\n.complete {\r\n    background: url(./images/icons8-check-30.png) no-repeat center;\r\n    background-size: fill;\r\n}\r\n\r\n.todos-title {\r\n    font-size: 2.5rem;\r\n    border-bottom: 2px solid #EBF6FF;\r\n}\r\n\r\n.content-container {\r\n    font-size: 1.1rem;\r\n    padding: 1rem;\r\n    border-bottom: 2px solid #EBF6FF;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 0.5rem;\r\n    align-items: center;\r\n    \r\n}\r\n\r\n.content-container:hover {\r\n    background: #EBF6FF;\r\n    cursor: pointer;\r\n}\r\n\r\n/* BUTTONS */\r\n\r\nimg:hover {\r\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\r\n    cursor: pointer;\r\n}\r\n\r\n.action-buttons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.add-button,\r\n.edit-button,\r\n.delete-button,\r\n.info-button {\r\n    height: 1.5rem;\r\n}\r\n\r\n/* MODAL */\r\n\r\n.modal {\r\n    display: none;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    /* Semi-transparent black background */\r\n}\r\n\r\n.modal-container {\r\n    background-color: white;\r\n    margin: 10% auto;\r\n    border: 1px solid gray;\r\n    width: max(320px, 30%);\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.modal-title {\r\n    grid-row: 1 / 2;\r\n    background: #1F9EFF;\r\n    font-size: 2rem;\r\n    color: white;\r\n    padding: 1rem 1.5rem;\r\n}\r\n\r\n.modal-content {\r\n    grid-row: 2 / 3;\r\n    padding: 1rem 1.5rem;\r\n    font-size: 1.3rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n}\r\n\r\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\r\n\r\n#new-project-modal,\r\n#edit-project-modal,\r\n#new-todo-modal {\r\n    display: none;\r\n}\r\n\r\n/* FORM STYLES */\r\n\r\ninput,\r\nselect {\r\n    border: 2px solid gray;\r\n    outline: none;\r\n    border-radius: 5px;\r\n    height: 2rem;\r\n    font-size: 1rem;\r\n    padding-left: 0.5rem;\r\n}\r\n\r\n.modal-content .action-buttons {\r\n    justify-content: flex-end;\r\n    gap: 1rem;\r\n}\r\n\r\n.required {\r\n    color: red;\r\n}\r\n\r\n.error-text {\r\n    display: none;\r\n    color: red;\r\n    font-size: 0.8rem;\r\n}\r\n\r\nbutton {\r\n    background: #1F9EFF;\r\n    color: white;\r\n    padding: 0.75rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 1.3rem;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background: #1b87da;\r\n}'],sourceRoot:""}]);const u=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],d=0;d<n.length;d++){var c=n[d],A=r.base?c[0]+r.base:c[0],s=i[A]||0,l="".concat(A," ").concat(s);i[A]=s+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=d,e.splice(d,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var d=t(i[a]);e[d].references--}for(var c=r(n,o),A=0;A<i.length;A++){var s=t(i[A]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},718:(n,e,t)=>{n.exports=t.p+"1f83024f4bb8dc3ad757.png"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),d=t(565),c=t.n(d),A=t(216),s=t.n(A),l=t(589),u=t.n(l),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=(()=>{let n=[{title:"First Project",todos:[{title:"Walk my dog",description:"",dueDate:"",priority:"none",complete:!1}]}];return{projects:n,getAllTodos:()=>{let e=[];for(let t of n)for(let n of t.todos)e.push(n);return e}}})(),g={newProjectModal:{element:document.querySelector("#new-project-modal"),titleField:document.querySelector("#new-project-modal .project-title"),errorText:document.querySelector("#new-project-modal .error-text")},editProjectModal:{element:document.querySelector("#edit-project-modal"),titleField:document.querySelector("#edit-project-modal .project-title"),errorText:document.querySelector("#edit-project-modal .error-text")},newTodoModal:{element:document.querySelector("#new-todo-modal"),titleField:document.querySelector("#new-todo-modal .todo-title"),descField:document.querySelector("#new-todo-modal .todo-description"),dueDateField:document.querySelector("#new-todo-modal .todo-date"),priorityField:document.querySelector("#new-todo-modal .todo-priority"),errorText:document.querySelector("#new-todo-modal .error-text")}},B=(()=>{const n=document.querySelector(".modal"),e=document.querySelector(".projects"),t=document.querySelector(".todos");function r(n,e=""){n.element.style.display="block",n.titleField.value=e,n.titleField.focus()}function o(n,e,t){n.complete&&(e.classList.add("complete"),t.style.textDecoration="line-through"),"low"===n.priority&&(t.style.color="#32CD32"),"medium"===n.priority&&(t.style.color="#DAA520"),"high"===n.priority&&(t.style.color="#FF6347")}return{displayModal:function(e,t=null){n.style.display="block",e===g.newProjectModal||e===g.newTodoModal?r(e):e===g.editProjectModal&&r(e,f.projects[t].title)},closeModal:function(e){n.style.display="none",e.element.style.display="none",function(n){n.errorText.style.display="none",n.titleField.value=""}(e)},displayError:function(n){n.errorText.style.display="block"},displayProjects:function(){!function(){for(;e.firstChild;)e.removeChild(e.firstChild)}();for(let n=0;n<f.projects.length;n++){const t=document.createElement("div");t.classList.add("sidebar-container"),t.setAttribute("index",n);const r=document.createElement("span");r.textContent=f.projects[n].title;const o=document.createElement("div");o.classList.add("action-buttons");const i=document.createElement("img");i.src="../src/images/icons8-edit-30.png",i.classList.add("edit-button"),i.classList.add("edit-project-button"),i.addEventListener("click",h.handleEditButtonClick);const a=document.createElement("img");a.src="../src/images/icons8-delete-24.png",a.classList.add("delete-button"),a.classList.add("delete-project-button"),a.addEventListener("click",h.handleDeleteButtonClick),o.append(i,a),t.append(r,o),e.appendChild(t)}},displayTodos:function(){!function(){for(;t.firstChild;)t.removeChild(t.firstChild)}();const n=f.getAllTodos();for(let e=0;e<n.length;e++){const r=document.createElement("div");r.classList.add("content-container"),r.setAttribute("index",e),r.addEventListener("click",h.handleTodoClick);const i=document.createElement("div");i.classList.add("todo-info");const a=document.createElement("div");a.classList.add("checkbox");const d=document.createElement("span");d.textContent=n[e].title,o(n[e],a,d),i.append(a,d);const c=document.createElement("div");c.classList.add("action-buttons");const A=document.createElement("img");A.src="../src/images/icons8-edit-30.png",A.classList.add("edit-button"),A.classList.add("edit-todo-button"),A.addEventListener("click",h.handleEditButtonClick);const s=document.createElement("img");s.src="../src/images/icons8-delete-24.png",s.classList.add("delete-button"),s.classList.add("delete-todo-button"),s.addEventListener("click",h.handleDeleteButtonClick),c.append(A,s),r.append(i,c),t.appendChild(r)}}}})();class C{constructor(n){this.title=n,this.todos=[]}get title(){return this._title}set title(n){this._title=n}addTodo(n){this.todos.push(n)}removeTodo(n){this.todos.pop(n)}}class b{constructor(n,e,t,r){this.title=n,this.description=e,this.date=t,this.priority=r,this.complete=!1}get title(){return this._title}set title(n){this._title=n}get description(){return this._description}set description(n){this._description=n}get date(){return this._date}set date(n){this._date=n}get priority(){return this._priority}set priority(n){this._priority=n}get complete(){return this._complete}set complete(n){this._complete=n}}const h=(()=>{const n=document.querySelector(".new-project-button"),e=document.querySelector(".modal"),t=document.querySelectorAll(".cancel-button"),r=document.querySelectorAll(".confirm-button"),o=document.querySelectorAll(".edit-project-button"),i=document.querySelectorAll(".delete-project-button"),a=document.querySelector(".new-todo-button"),d=document.querySelectorAll(".content-container");function c(n){return n.target.closest(".sidebar-container").getAttribute("index")}function A(n){const e=n.titleField.value;let t,r,o;n===g.newTodoModal&&(t=n.descField.value,r=n.dueDateField.value,o=n.priorityField.value),""!==e?(n===g.newProjectModal?function(n){const e=new C(n);f.projects.push(e),B.displayProjects()}(e):n===g.editProjectModal?function(n,e){n.title=e,B.displayProjects()}(function(n){return f.projects[n]}(index),e):n===g.newTodoModal&&function(n,e,t,r){const o=new b(n,e,t,r);f.projects[0].todos.push(o),B.displayTodos()}(e,t,r,o),B.closeModal(n)):B.displayError(n)}function s(n){B.displayModal(g.editProjectModal,c(n))}function l(n){var e;e=c(n),f.projects.splice(e,1),B.displayProjects()}function u(n){(function(n){const e=function(n){return f.projects[0].todos[n]}(n);e.complete=!e.complete})(function(n){return n.target.closest(".content-container").getAttribute("index")}(n)),B.displayTodos()}function p(){let n=null;for(let e in g)if(g.hasOwnProperty(e)){const t=g[e];"block"===t.element.style.display&&(n=t)}return n}return n.addEventListener("click",(()=>{B.displayModal(g.newProjectModal)})),o.forEach((n=>{n.addEventListener("click",s)})),i.forEach((n=>{n.addEventListener("click",l)})),a.addEventListener("click",(()=>{B.displayModal(g.newTodoModal)})),d.forEach((n=>{n.addEventListener("click",u)})),e.addEventListener("click",(n=>{n.target.classList.contains("modal")&&B.closeModal(p())})),t.forEach((n=>{n.addEventListener("click",(()=>{B.closeModal(p())}))})),r.forEach((n=>{n.addEventListener("click",(()=>{A(p())})),document.addEventListener("keydown",(n=>{"Enter"===n.key&&"block"===e.style.display&&A(p())}))})),{handleEditButtonClick:s,handleDeleteButtonClick:l,handleTodoClick:u}})();B.displayProjects(),B.displayTodos()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,