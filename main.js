(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>u});var o=t(537),r=t.n(o),i=t(645),d=t.n(i),l=t(667),a=t.n(l),c=new URL(t(718),t.b),s=d()(r()),A=a()(c);s.push([e.id,`* {\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n    font-weight: 500;\n}\n\nbody {\n    margin: 0;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: auto 1fr;\n    min-height: 100vh;\n}\n\n/* HEADER */\n.header {\n    background: #1F9EFF;\n    font-size: 3rem;\n    grid-column: span 2;\n    grid-row: 1 / 2;\n    color: white;\n    padding: 1rem 5rem;\n}\n\n/* SIDEBAR */\n\n.sidebar {\n    background: #ADDCFF;\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    color: gray;\n    font-size: 1.5rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    min-width: 200px;\n}\n\n.sidebar span {\n    align-self: center;\n}\n\n.filters,\n.projects {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.sidebar-container {\n    background: white;\n    padding: 0.75rem;\n    border-radius: 8px;\n    border: 1px solid white;\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    overflow: hidden;\n}\n\n.sidebar-container:hover {\n    border: 1px solid gray;\n    cursor: pointer;\n}\n\n.selected {\n    background: #ffdeb3;\n    border: 1px solid #ffdeb3;\n}\n\n.projects-title,\n.todos-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n    gap: 0.5rem;\n}\n\n/* CONTENT */\n\n.content {\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    margin: 0 25%;\n    color: gray;\n    min-width: 300px;\n}\n\n.todo-info {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    overflow: hidden;\n    flex: 1;\n}\n\n.todo-info span,\n.sidebar-container span {\n    display: inline-block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.checkbox {\n    min-width: 1rem;\n    min-height: 1rem;\n    border-radius: 5px;\n    border: 2px solid gray;\n    background: white;\n}\n\n.complete {\n    background: url(${A}) no-repeat center;\n    background-size: fill;\n}\n\n.todos-title {\n    font-size: 2.5rem;\n    border-bottom: 2px solid #EBF6FF;\n}\n\n.content-container {\n    font-size: 1.1rem;\n    padding: 1rem;\n    border-bottom: 2px solid #EBF6FF;\n    display: flex;\n    justify-content: space-between;\n    gap: 0.5rem;\n    align-items: center;\n\n}\n\n.content-container:hover {\n    background: #EBF6FF;\n    cursor: pointer;\n}\n\n.date {\n    font-size: 0.75rem;\n    margin-left: auto;\n    white-space: nowrap;\n}\n\n/* BUTTONS */\n\nimg:hover {\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\n    cursor: pointer;\n}\n\n.action-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 0.5rem;\n}\n\n.add-button,\n.edit-button,\n.delete-button,\n.info-button {\n    height: 1.5rem;\n}\n\n/* MODAL */\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    /* Semi-transparent black background */\n}\n\n.modal-container {\n    background-color: white;\n    margin: 10% auto;\n    border: 1px solid gray;\n    width: max(320px, 30%);\n    display: flex;\n    flex-direction: column;\n}\n\n.modal-title {\n    grid-row: 1 / 2;\n    background: #1F9EFF;\n    font-size: 2rem;\n    color: white;\n    padding: 1rem 1.5rem;\n}\n\n.modal-content {\n    grid-row: 2 / 3;\n    padding: 1rem 1.5rem;\n    font-size: 1.3rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\n\n#new-project-modal,\n#edit-project-modal,\n#new-todo-modal, #edit-todo-modal, #todo-info-modal {\n    display: none;\n}\n\n\n\n#todo-info-modal .attribute-container {\n    border-bottom: 2px solid #EBF6FF;\n    padding-bottom: 1rem;\n    display: flex;\n    align-items: center;\n}\n\n.attribute-container .attribute {\n    width: 150px;\n}\n\n.attribute-container .value {\n    color: gray;\n    font-size: 1rem;\n    flex: 1;\n}\n\n.attribute-container .todo-description {\n    height: 100px;\n    overflow-y: scroll;\n}\n\n/* FORM STYLES */\n\ninput,\nselect {\n    border: 2px solid gray;\n    outline: none;\n    border-radius: 5px;\n    height: 2rem;\n    font-size: 1rem;\n    padding-left: 0.5rem;\n}\n\n.modal-content .action-buttons {\n    justify-content: flex-end;\n    gap: 1rem;\n}\n\n.required {\n    color: red;\n}\n\n.error-text {\n    display: none;\n    color: red;\n    font-size: 0.8rem;\n}\n\nbutton {\n    background: #1F9EFF;\n    color: white;\n    padding: 0.75rem;\n    border: none;\n    border-radius: 5px;\n    font-size: 1.3rem;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background: #1b87da;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI;4DACwD;IACxD,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,aAAa;IACb,8BAA8B;IAC9B,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA,WAAW;AACX;IACI,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,YAAY;IACZ,kBAAkB;AACtB;;AAEA,YAAY;;AAEZ;IACI,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;IACf,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;AAC7B;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,eAAe;IACf,WAAW;AACf;;AAEA,YAAY;;AAEZ;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;IACb,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,OAAO;AACX;;AAEA;;IAEI,qBAAqB;IACrB,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,sBAAsB;IACtB,iBAAiB;AACrB;;AAEA;IACI,oEAA8D;IAC9D,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,gCAAgC;AACpC;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,gCAAgC;IAChC,aAAa;IACb,8BAA8B;IAC9B,WAAW;IACX,mBAAmB;;AAEvB;;AAEA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA,YAAY;;AAEZ;IACI,uDAAuD;IACvD,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,WAAW;AACf;;AAEA;;;;IAII,cAAc;AAClB;;AAEA,UAAU;;AAEV;IACI,aAAa;IACb,eAAe;IACf,UAAU;IACV,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;IACd,oCAAoC;IACpC,sCAAsC;AAC1C;;AAEA;IACI,uBAAuB;IACvB,gBAAgB;IAChB,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,uCAAuC;;AAEvC;;;IAGI,aAAa;AACjB;;;;AAIA;IACI,gCAAgC;IAChC,oBAAoB;IACpB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,eAAe;IACf,OAAO;AACX;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA,gBAAgB;;AAEhB;;IAEI,sBAAsB;IACtB,aAAa;IACb,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:['* {\r\n    font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,\r\n        Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n    font-weight: 500;\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    grid-template-rows: auto 1fr;\r\n    min-height: 100vh;\r\n}\r\n\r\n/* HEADER */\r\n.header {\r\n    background: #1F9EFF;\r\n    font-size: 3rem;\r\n    grid-column: span 2;\r\n    grid-row: 1 / 2;\r\n    color: white;\r\n    padding: 1rem 5rem;\r\n}\r\n\r\n/* SIDEBAR */\r\n\r\n.sidebar {\r\n    background: #ADDCFF;\r\n    grid-column: 1 / 2;\r\n    grid-row: 2 / 3;\r\n    color: gray;\r\n    font-size: 1.5rem;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    min-width: 200px;\r\n}\r\n\r\n.sidebar span {\r\n    align-self: center;\r\n}\r\n\r\n.filters,\r\n.projects {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n}\r\n\r\n.sidebar-container {\r\n    background: white;\r\n    padding: 0.75rem;\r\n    border-radius: 8px;\r\n    border: 1px solid white;\r\n    font-size: 1.2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow: hidden;\r\n}\r\n\r\n.sidebar-container:hover {\r\n    border: 1px solid gray;\r\n    cursor: pointer;\r\n}\r\n\r\n.selected {\r\n    background: #ffdeb3;\r\n    border: 1px solid #ffdeb3;\r\n}\r\n\r\n.projects-title,\r\n.todos-title {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 1rem;\r\n    gap: 0.5rem;\r\n}\r\n\r\n/* CONTENT */\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    margin: 0 25%;\r\n    color: gray;\r\n    min-width: 300px;\r\n}\r\n\r\n.todo-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    overflow: hidden;\r\n    flex: 1;\r\n}\r\n\r\n.todo-info span,\r\n.sidebar-container span {\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.checkbox {\r\n    min-width: 1rem;\r\n    min-height: 1rem;\r\n    border-radius: 5px;\r\n    border: 2px solid gray;\r\n    background: white;\r\n}\r\n\r\n.complete {\r\n    background: url(./images/icons8-check-30.png) no-repeat center;\r\n    background-size: fill;\r\n}\r\n\r\n.todos-title {\r\n    font-size: 2.5rem;\r\n    border-bottom: 2px solid #EBF6FF;\r\n}\r\n\r\n.content-container {\r\n    font-size: 1.1rem;\r\n    padding: 1rem;\r\n    border-bottom: 2px solid #EBF6FF;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 0.5rem;\r\n    align-items: center;\r\n\r\n}\r\n\r\n.content-container:hover {\r\n    background: #EBF6FF;\r\n    cursor: pointer;\r\n}\r\n\r\n.date {\r\n    font-size: 0.75rem;\r\n    margin-left: auto;\r\n    white-space: nowrap;\r\n}\r\n\r\n/* BUTTONS */\r\n\r\nimg:hover {\r\n    filter: grayscale(100%) contrast(10000%) brightness(0%);\r\n    cursor: pointer;\r\n}\r\n\r\n.action-buttons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.add-button,\r\n.edit-button,\r\n.delete-button,\r\n.info-button {\r\n    height: 1.5rem;\r\n}\r\n\r\n/* MODAL */\r\n\r\n.modal {\r\n    display: none;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    /* Semi-transparent black background */\r\n}\r\n\r\n.modal-container {\r\n    background-color: white;\r\n    margin: 10% auto;\r\n    border: 1px solid gray;\r\n    width: max(320px, 30%);\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.modal-title {\r\n    grid-row: 1 / 2;\r\n    background: #1F9EFF;\r\n    font-size: 2rem;\r\n    color: white;\r\n    padding: 1rem 1.5rem;\r\n}\r\n\r\n.modal-content {\r\n    grid-row: 2 / 3;\r\n    padding: 1rem 1.5rem;\r\n    font-size: 1.3rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n}\r\n\r\n/* DIFFERENT MODAL DISPLAY CONTAINERS */\r\n\r\n#new-project-modal,\r\n#edit-project-modal,\r\n#new-todo-modal, #edit-todo-modal, #todo-info-modal {\r\n    display: none;\r\n}\r\n\r\n\r\n\r\n#todo-info-modal .attribute-container {\r\n    border-bottom: 2px solid #EBF6FF;\r\n    padding-bottom: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.attribute-container .attribute {\r\n    width: 150px;\r\n}\r\n\r\n.attribute-container .value {\r\n    color: gray;\r\n    font-size: 1rem;\r\n    flex: 1;\r\n}\r\n\r\n.attribute-container .todo-description {\r\n    height: 100px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n/* FORM STYLES */\r\n\r\ninput,\r\nselect {\r\n    border: 2px solid gray;\r\n    outline: none;\r\n    border-radius: 5px;\r\n    height: 2rem;\r\n    font-size: 1rem;\r\n    padding-left: 0.5rem;\r\n}\r\n\r\n.modal-content .action-buttons {\r\n    justify-content: flex-end;\r\n    gap: 1rem;\r\n}\r\n\r\n.required {\r\n    color: red;\r\n}\r\n\r\n.error-text {\r\n    display: none;\r\n    color: red;\r\n    font-size: 0.8rem;\r\n}\r\n\r\nbutton {\r\n    background: #1F9EFF;\r\n    color: white;\r\n    padding: 0.75rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 1.3rem;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background: #1b87da;\r\n}'],sourceRoot:""}]);const u=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var l=0;l<this.length;l++){var a=this[l][0];null!=a&&(d[a]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);o&&d[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},d=[],l=0;l<e.length;l++){var a=e[l],c=o.base?a[0]+o.base:a[0],s=i[c]||0,A="".concat(c," ").concat(s);i[c]=s+1;var u=t(A),p={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=r(p,o);o.byIndex=l,n.splice(l,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var l=t(i[d]);n[l].references--}for(var a=o(e,r),c=0;c<i.length;c++){var s=t(i[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=a}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},718:(e,n,t)=>{e.exports=t.p+"1f83024f4bb8dc3ad757.png"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!e;)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),d=t.n(i),l=t(565),a=t.n(l),c=t(216),s=t.n(c),A=t(589),u=t.n(A),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=a(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=s(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=(()=>{let e=[{title:"First Project",todos:[{title:"Walk my dog",description:"I need to walk my dog today.",date:"2023-07-16",priority:"high",complete:!1,projectTitle:"First Project"}],selected:!1}];const n=()=>{let n=[];for(let t of e)for(let e of t.todos)n.push(e);return n},t=()=>n().filter((e=>"high"===e.priority)),o=()=>n().filter((e=>e.complete)),r=()=>{const e=n(),t=new Date;return e.filter((e=>{const n=d(e.date);return n.getDate()===t.getDate()&&n.getMonth()===t.getMonth()&&n.getFullYear()===t.getFullYear()}))},i=()=>{const e=n(),t=new Date,o=new Date;return o.setDate(o.getDate()+7),e.filter((e=>{const n=d(e.date);return t<=n&&n<=o}))},d=e=>{const[n,t,o]=e.split("-");return new Date(n,t-1,o)};let l=[{title:"All",todos:n(),selected:!1},{title:"Today",todos:r(),selected:!1},{title:"This Week",todos:i(),selected:!1},{title:"Important",todos:t(),selected:!1},{title:"Completed",todos:o(),selected:!1}];const{projects:a,filters:c}=(()=>{const n=localStorage.getItem("projects"),t=localStorage.getItem("filters");return n&&t?{projects:JSON.parse(n),filters:JSON.parse(t)}:{projects:e,filters:l}})();return e=a,l=c,{projects:e,filters:l,getAllFilters:()=>{(()=>{const e=l.find((e=>"All"===e.title)),d=l.find((e=>"Important"===e.title)),a=l.find((e=>"Completed"===e.title)),c=l.find((e=>"Today"===e.title)),s=l.find((e=>"This Week"===e.title));e.todos=n(),d.todos=t(),a.todos=o(),c.todos=r(),s.todos=i()})();let d=[];for(let e of l)d.push(e);for(let n of e)d.push(n);return d},saveToLocalStorage:()=>{localStorage.setItem("projects",JSON.stringify(e)),localStorage.setItem("filters",JSON.stringify(l))}}})();class g{constructor(e){this.title=e,this.todos=[],this.selected=!1}}const C={newProjectModal:{element:document.querySelector("#new-project-modal"),titleField:document.querySelector("#new-project-modal .project-title"),emptyErrorText:document.querySelector("#new-project-modal .empty"),takenErrorText:document.querySelector("#new-project-modal .taken")},editProjectModal:{element:document.querySelector("#edit-project-modal"),titleField:document.querySelector("#edit-project-modal .project-title"),emptyErrorText:document.querySelector("#edit-project-modal .empty"),takenErrorText:document.querySelector("#edit-project-modal .taken")},newTodoModal:{element:document.querySelector("#new-todo-modal"),titleField:document.querySelector("#new-todo-modal .todo-title"),descField:document.querySelector("#new-todo-modal .todo-description"),dueDateField:document.querySelector("#new-todo-modal .todo-date"),priorityField:document.querySelector("#new-todo-modal .todo-priority"),emptyErrorText:document.querySelector("#new-todo-modal .empty")},editTodoModal:{element:document.querySelector("#edit-todo-modal"),titleField:document.querySelector("#edit-todo-modal .todo-title"),descField:document.querySelector("#edit-todo-modal .todo-description"),dueDateField:document.querySelector("#edit-todo-modal .todo-date"),priorityField:document.querySelector("#edit-todo-modal .todo-priority"),emptyErrorText:document.querySelector("#edit-todo-modal .empty")},todoInfoModal:{element:document.querySelector("#todo-info-modal"),titleField:document.querySelector("#todo-info-modal .todo-title"),descField:document.querySelector("#todo-info-modal .todo-description"),dueDateField:document.querySelector("#todo-info-modal .todo-date"),priorityField:document.querySelector("#todo-info-modal .todo-priority"),completeField:document.querySelector("#todo-info-modal .todo-complete"),projectField:document.querySelector("#todo-info-modal .todo-project")}};class B{constructor(e,n,t,o,r){this.title=e,this.description=n,this.date=t,this.priority=o,this.complete=!1,this.projectTitle=r}}const I=(()=>{const e=document.querySelector(".new-project-button"),n=document.querySelector(".modal"),t=document.querySelectorAll(".confirm-button");let o,r;function i(e){return e.target.closest(".content-container").getAttribute("index")}function d(e){return A().todos[e]}function l(e){const n=e.titleField.value;if(n)if(e!==C.newProjectModal&&e!==C.editProjectModal||!function(e){return f.getAllFilters().find((n=>n.title===e))}(n)){if(e===C.newProjectModal)!function(e){const n=new g(e);f.projects.push(n)}(n);else if(e===C.editProjectModal)!function(e,n){e.title=n}(r,n);else if(e===C.newTodoModal)!function(e,n,t,o,r){const i=new B(e,n,t,o,r);A().todos.push(i)}(n,e.descField.value,e.dueDateField.value,e.priorityField.value,A().title);else if(e===C.editTodoModal){const t=e.descField.value,r=e.dueDateField.value,i=e.priorityField.value;!function(e,n,t,o,r){e.title=n,e.description=t,e.date=o,e.priority=r}(A().todos[o],n,t,r,i)}b.closeModal(e),f.saveToLocalStorage(),b.updateDisplay()}else b.toggleErrorMessages(e,!1,!0);else b.toggleErrorMessages(e,!0,!1)}function a(){A()&&(A().selected=!1)}function c(e){e.selected=!0}function s(e){const n=e.target.closest(".sidebar-container").getAttribute("title");return f.getAllFilters().find((e=>e.title===n))}function A(){return f.getAllFilters().find((e=>e.selected))}function u(){let e=null;for(let n in C)if(C.hasOwnProperty(n)){const t=C[n];"block"===t.element.style.display&&(e=t)}return e}return e.addEventListener("click",(e=>{b.displayModal(e,C.newProjectModal)})),n.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("cancel-button"))&&b.closeModal(u())})),t.forEach((e=>{e.addEventListener("click",(()=>{l(u())})),document.addEventListener("keydown",(e=>{"Enter"===e.key&&"block"===n.style.display&&l(u())}))})),{handleEditButtonClick:function(e,n){"todo"===n&&(o=i(e),b.displayModal(e,C.editTodoModal,o)),"project"===n&&(r=s(e),b.displayModal(e,C.editProjectModal))},handleDeleteButtonClick:function(e,n){"todo"===n&&function(e){const n=d(e),t=n.projectTitle,o=f.projects.find((e=>e.title===t)),r=o.todos.findIndex((e=>e==n));o.todos.splice(r,1)}(i(e)),"project"===n&&function(e){const n=f.projects.findIndex((n=>n===e));f.projects.splice(n,1)}(s(e)),f.saveToLocalStorage(),b.updateDisplay()},handleTodoClick:function(e){!function(e){const n=d(e);n.complete=!n.complete}(i(e)),f.saveToLocalStorage(),b.updateDisplay()},handleTodoInfoClick:function(e){o=i(e),b.displayModal(e,C.todoInfoModal,o)},handleFilterClick:function(e){r=s(e),a(),c(r),f.saveToLocalStorage(),b.updateDisplay()},HandleNewTodoClick:function(e){b.displayModal(e,C.newTodoModal)},setDefaultFilter:function(){A()||(f.filters.find((e=>"All"===e.title)).selected=!0)},getSelectedFilter:A,getFilterObject:s,unselectProject:a,selectProject:c}})(),b=(()=>{const e=document.querySelector(".modal"),n=document.querySelector(".projects"),t=document.querySelector(".todos"),o=document.querySelector(".filters"),r=document.querySelector(".todos-title"),i=r.querySelector("span");function d(e,n="",t="",o="",r="",i="",d=""){e.element.style.display="block",e===C.todoInfoModal?(r=r.charAt(0).toUpperCase()+r.slice(1),e.titleField.textContent=n,e.descField.textContent=t,e.dueDateField.textContent=o,e.priorityField.textContent=r,e.completeField.textContent=i?"Yes":"No",e.projectField.textContent=d):(e.titleField.value=n,e.titleField.focus(),e===C.editTodoModal&&(e.descField.value=t,e.dueDateField.value=o,e.priorityField.querySelector("option[value="+r+"]").selected=!0))}function l(e,n,t){e.emptyErrorText.style.display=n?"block":"none",e.takenErrorText.style.display=t?"block":"none"}function a(e,n,t){e.complete&&(n.classList.add("complete"),t.style.textDecoration="line-through"),"low"===e.priority&&(t.style.color="#32CD32"),"medium"===e.priority&&(t.style.color="#DAA520"),"high"===e.priority&&(t.style.color="#FF6347")}function c(e){e.classList.add("selected")}return{displayModal:function(n,t,o=null){if(e.style.display="block",t!==C.newProjectModal&&t!==C.newTodoModal||d(t),t===C.editTodoModal||t===C.todoInfoModal){const e=I.getSelectedFilter().todos[o],n=e.title,r=e.description,i=e.date,l=e.priority;if(t===C.todoInfoModal){const n=e.complete,o=e.projectTitle,a=f.projects.find((e=>e.title===o));d(t,o,r,i,l,n,a.title)}else d(t,n,r,i,l)}t===C.editProjectModal&&d(t,I.getFilterObject(n).title)},closeModal:function(n){e.style.display="none",n.element.style.display="none",n!==C.todoInfoModal&&function(e){l(e,!1,!1),e.titleField.value="",e===C.newTodoModal&&(e.descField.value="",e.dueDateField.value="",e.priorityField.selectedIndex=0)}(n)},toggleErrorMessages:l,updateDisplay:function(){I.setDefaultFilter(),r.childElementCount>1&&r.removeChild(r.lastChild),function(){for(;o.firstChild;)o.removeChild(o.firstChild)}(),function(){for(;n.firstChild;)n.removeChild(n.firstChild)}(),function(){for(;t.firstChild;)t.removeChild(t.firstChild)}(),i.textContent=I.getSelectedFilter().title,f.projects.includes(I.getSelectedFilter())&&function(){const e=document.createElement("img");e.src="../src/images/icons8-add-32.png",e.classList.add("add-button"),e.classList.add("new-todo-button"),e.addEventListener("click",(e=>{I.HandleNewTodoClick(e)})),r.appendChild(e)}(),function(){for(let e=0;e<f.filters.length;e++){const n=document.createElement("div");n.classList.add("sidebar-container"),n.setAttribute("title",f.filters[e].title),n.addEventListener("click",(e=>{I.handleFilterClick(e)})),f.filters[e].selected&&c(n);const t=document.createElement("span");t.textContent=f.filters[e].title,n.appendChild(t),o.appendChild(n)}}(),function(){for(let e=0;e<f.projects.length;e++){const t=document.createElement("div");t.classList.add("sidebar-container"),t.setAttribute("title",f.projects[e].title),t.addEventListener("click",(e=>{e.stopPropagation(),I.handleFilterClick(e)})),f.projects[e].selected&&c(t);const o=document.createElement("span");o.textContent=f.projects[e].title;const r=document.createElement("div");r.classList.add("action-buttons");const i=document.createElement("img");if(i.src="../src/images/icons8-edit-30.png",i.classList.add("edit-button"),i.classList.add("edit-project-button"),i.addEventListener("click",(e=>{e.stopPropagation(),I.handleEditButtonClick(e,"project")})),f.projects.length>1){const e=document.createElement("img");e.src="../src/images/icons8-delete-24.png",e.classList.add("delete-button"),e.classList.add("delete-project-button"),e.addEventListener("click",(e=>{e.stopPropagation(),I.handleDeleteButtonClick(e,"project")})),r.append(i,e)}else r.appendChild(i);t.append(o,r),n.appendChild(t)}}(),function(){const e=I.getSelectedFilter().todos;for(let n=0;n<e.length;n++){const o=document.createElement("div");o.classList.add("content-container"),o.setAttribute("index",n),o.addEventListener("click",I.handleTodoClick);const r=document.createElement("div");r.classList.add("todo-info");const i=document.createElement("div");i.classList.add("checkbox");const d=document.createElement("span");d.textContent=e[n].title;const l=document.createElement("div");l.classList.add("date"),l.textContent=e[n].date,a(e[n],i,d),r.append(i,d,l);const c=document.createElement("div");c.classList.add("action-buttons");const s=document.createElement("img");s.src="../src/images/icons8-edit-30.png",s.classList.add("edit-button"),s.classList.add("edit-todo-button"),s.addEventListener("click",(e=>{e.stopPropagation(),I.handleEditButtonClick(e,"todo")}));const A=document.createElement("img");A.src="../src/images/icons8-delete-24.png",A.classList.add("delete-button"),A.classList.add("delete-todo-button"),A.addEventListener("click",(e=>{e.stopPropagation(),I.handleDeleteButtonClick(e,"todo")}));const u=document.createElement("img");u.src="../src/images/icons8-info-24.png",u.classList.add("info-button"),u.addEventListener("click",(e=>{e.stopPropagation(),I.handleTodoInfoClick(e)})),c.append(s,A,u),o.append(r,c),t.appendChild(o)}}()}}})();I.unselectProject(),I.selectProject(f.filters[0]),b.updateDisplay()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,